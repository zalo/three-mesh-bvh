(function(){"use strict";/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Bs="166",ne="";class Xi{addEventListener(t,i){this._listeners===void 0&&(this._listeners={});const s=this._listeners;s[t]===void 0&&(s[t]=[]),s[t].indexOf(i)===-1&&s[t].push(i)}hasEventListener(t,i){if(this._listeners===void 0)return!1;const s=this._listeners;return s[t]!==void 0&&s[t].indexOf(i)!==-1}removeEventListener(t,i){if(this._listeners===void 0)return;const e=this._listeners[t];if(e!==void 0){const n=e.indexOf(i);n!==-1&&e.splice(n,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const s=this._listeners[t.type];if(s!==void 0){t.target=this;const e=s.slice(0);for(let n=0,r=e.length;n<r;n++)e[n].call(this,t);t.target=null}}}const D=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function di(){const u=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0,s=Math.random()*4294967295|0;return(D[u&255]+D[u>>8&255]+D[u>>16&255]+D[u>>24&255]+"-"+D[t&255]+D[t>>8&255]+"-"+D[t>>16&15|64]+D[t>>24&255]+"-"+D[i&63|128]+D[i>>8&255]+"-"+D[i>>16&255]+D[i>>24&255]+D[s&255]+D[s>>8&255]+D[s>>16&255]+D[s>>24&255]).toLowerCase()}function at(u,t,i){return Math.max(t,Math.min(i,u))}function Qt(u,t){switch(t.constructor){case Float32Array:return u;case Uint32Array:return u/4294967295;case Uint16Array:return u/65535;case Uint8Array:return u/255;case Int32Array:return Math.max(u/2147483647,-1);case Int16Array:return Math.max(u/32767,-1);case Int8Array:return Math.max(u/127,-1);default:throw new Error("Invalid component type.")}}function O(u,t){switch(t.constructor){case Float32Array:return u;case Uint32Array:return Math.round(u*4294967295);case Uint16Array:return Math.round(u*65535);case Uint8Array:return Math.round(u*255);case Int32Array:return Math.round(u*2147483647);case Int16Array:return Math.round(u*32767);case Int8Array:return Math.round(u*127);default:throw new Error("Invalid component type.")}}class v{constructor(t=0,i=0){v.prototype.isVector2=!0,this.x=t,this.y=i}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,i){return this.x=t,this.y=i,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,i){switch(t){case 0:this.x=i;break;case 1:this.y=i;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this}addScaledVector(t,i){return this.x+=t.x*i,this.y+=t.y*i,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const i=this.x,s=this.y,e=t.elements;return this.x=e[0]*i+e[3]*s+e[6],this.y=e[1]*i+e[4]*s+e[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this}clampScalar(t,i){return this.x=Math.max(t,Math.min(i,this.x)),this.y=Math.max(t,Math.min(i,this.y)),this}clampLength(t,i){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Math.max(t,Math.min(i,s)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const i=Math.sqrt(this.lengthSq()*t.lengthSq());if(i===0)return Math.PI/2;const s=this.dot(t)/i;return Math.acos(at(s,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const i=this.x-t.x,s=this.y-t.y;return i*i+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this}lerpVectors(t,i,s){return this.x=t.x+(i.x-t.x)*s,this.y=t.y+(i.y-t.y)*s,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,i=0){return this.x=t[i],this.y=t[i+1],this}toArray(t=[],i=0){return t[i]=this.x,t[i+1]=this.y,t}fromBufferAttribute(t,i){return this.x=t.getX(i),this.y=t.getY(i),this}rotateAround(t,i){const s=Math.cos(i),e=Math.sin(i),n=this.x-t.x,r=this.y-t.y;return this.x=n*s-r*e+t.x,this.y=n*e+r*s+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Bt{constructor(t,i,s,e,n,r,a,o,h){Bt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,i,s,e,n,r,a,o,h)}set(t,i,s,e,n,r,a,o,h){const c=this.elements;return c[0]=t,c[1]=e,c[2]=a,c[3]=i,c[4]=n,c[5]=o,c[6]=s,c[7]=r,c[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const i=this.elements,s=t.elements;return i[0]=s[0],i[1]=s[1],i[2]=s[2],i[3]=s[3],i[4]=s[4],i[5]=s[5],i[6]=s[6],i[7]=s[7],i[8]=s[8],this}extractBasis(t,i,s){return t.setFromMatrix3Column(this,0),i.setFromMatrix3Column(this,1),s.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const i=t.elements;return this.set(i[0],i[4],i[8],i[1],i[5],i[9],i[2],i[6],i[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,i){const s=t.elements,e=i.elements,n=this.elements,r=s[0],a=s[3],o=s[6],h=s[1],c=s[4],f=s[7],l=s[2],d=s[5],m=s[8],y=e[0],x=e[3],p=e[6],g=e[1],w=e[4],M=e[7],b=e[2],z=e[5],_=e[8];return n[0]=r*y+a*g+o*b,n[3]=r*x+a*w+o*z,n[6]=r*p+a*M+o*_,n[1]=h*y+c*g+f*b,n[4]=h*x+c*w+f*z,n[7]=h*p+c*M+f*_,n[2]=l*y+d*g+m*b,n[5]=l*x+d*w+m*z,n[8]=l*p+d*M+m*_,this}multiplyScalar(t){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=t,i[4]*=t,i[7]*=t,i[2]*=t,i[5]*=t,i[8]*=t,this}determinant(){const t=this.elements,i=t[0],s=t[1],e=t[2],n=t[3],r=t[4],a=t[5],o=t[6],h=t[7],c=t[8];return i*r*c-i*a*h-s*n*c+s*a*o+e*n*h-e*r*o}invert(){const t=this.elements,i=t[0],s=t[1],e=t[2],n=t[3],r=t[4],a=t[5],o=t[6],h=t[7],c=t[8],f=c*r-a*h,l=a*o-c*n,d=h*n-r*o,m=i*f+s*l+e*d;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const y=1/m;return t[0]=f*y,t[1]=(e*h-c*s)*y,t[2]=(a*s-e*r)*y,t[3]=l*y,t[4]=(c*i-e*o)*y,t[5]=(e*n-a*i)*y,t[6]=d*y,t[7]=(s*o-h*i)*y,t[8]=(r*i-s*n)*y,this}transpose(){let t;const i=this.elements;return t=i[1],i[1]=i[3],i[3]=t,t=i[2],i[2]=i[6],i[6]=t,t=i[5],i[5]=i[7],i[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const i=this.elements;return t[0]=i[0],t[1]=i[3],t[2]=i[6],t[3]=i[1],t[4]=i[4],t[5]=i[7],t[6]=i[2],t[7]=i[5],t[8]=i[8],this}setUvTransform(t,i,s,e,n,r,a){const o=Math.cos(n),h=Math.sin(n);return this.set(s*o,s*h,-s*(o*r+h*a)+r+t,-e*h,e*o,-e*(-h*r+o*a)+a+i,0,0,1),this}scale(t,i){return this.premultiply(Oi.makeScale(t,i)),this}rotate(t){return this.premultiply(Oi.makeRotation(-t)),this}translate(t,i){return this.premultiply(Oi.makeTranslation(t,i)),this}makeTranslation(t,i){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,i,0,0,1),this}makeRotation(t){const i=Math.cos(t),s=Math.sin(t);return this.set(i,-s,0,s,i,0,0,0,1),this}makeScale(t,i){return this.set(t,0,0,0,i,0,0,0,1),this}equals(t){const i=this.elements,s=t.elements;for(let e=0;e<9;e++)if(i[e]!==s[e])return!1;return!0}fromArray(t,i=0){for(let s=0;s<9;s++)this.elements[s]=t[s+i];return this}toArray(t=[],i=0){const s=this.elements;return t[i]=s[0],t[i+1]=s[1],t[i+2]=s[2],t[i+3]=s[3],t[i+4]=s[4],t[i+5]=s[5],t[i+6]=s[6],t[i+7]=s[7],t[i+8]=s[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Oi=new Bt;function re(u){for(let t=u.length-1;t>=0;--t)if(u[t]>=65535)return!0;return!1}function Ts(u){return document.createElementNS("http://www.w3.org/1999/xhtml",u)}const Ps={};function oe(u){u in Ps||(Ps[u]=!0,console.warn(u))}function Yi(u){return u<.04045?u*.0773993808:Math.pow(u*.9478672986+.0521327014,2.4)}let Et;class ae{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let i;if(t instanceof HTMLCanvasElement)i=t;else{Et===void 0&&(Et=Ts("canvas")),Et.width=t.width,Et.height=t.height;const s=Et.getContext("2d");t instanceof ImageData?s.putImageData(t,0,0):s.drawImage(t,0,0,t.width,t.height),i=Et}return i.width>2048||i.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),i.toDataURL("image/jpeg",.6)):i.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const i=Ts("canvas");i.width=t.width,i.height=t.height;const s=i.getContext("2d");s.drawImage(t,0,0,t.width,t.height);const e=s.getImageData(0,0,t.width,t.height),n=e.data;for(let r=0;r<n.length;r++)n[r]=Yi(n[r]/255)*255;return s.putImageData(e,0,0),i}else if(t.data){const i=t.data.slice(0);for(let s=0;s<i.length;s++)i instanceof Uint8Array||i instanceof Uint8ClampedArray?i[s]=Math.floor(Yi(i[s]/255)*255):i[s]=Yi(i[s]);return{data:i,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let ce=0;class he{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:ce++}),this.uuid=di(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const i=t===void 0||typeof t=="string";if(!i&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const s={uuid:this.uuid,url:""},e=this.data;if(e!==null){let n;if(Array.isArray(e)){n=[];for(let r=0,a=e.length;r<a;r++)e[r].isDataTexture?n.push(Zi(e[r].image)):n.push(Zi(e[r]))}else n=Zi(e);s.url=n}return i||(t.images[this.uuid]=s),s}}function Zi(u){return typeof HTMLImageElement<"u"&&u instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&u instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&u instanceof ImageBitmap?ae.getDataURL(u):u.data?{data:Array.from(u.data),width:u.width,height:u.height,type:u.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let le=0;class Tt extends Xi{constructor(t=Tt.DEFAULT_IMAGE,i=Tt.DEFAULT_MAPPING,s=1001,e=1001,n=1006,r=1008,a=1023,o=1009,h=Tt.DEFAULT_ANISOTROPY,c=ne){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:le++}),this.uuid=di(),this.name="",this.source=new he(t),this.mipmaps=[],this.mapping=i,this.channel=0,this.wrapS=s,this.wrapT=e,this.magFilter=n,this.minFilter=r,this.anisotropy=h,this.format=a,this.internalFormat=null,this.type=o,this.offset=new v(0,0),this.repeat=new v(1,1),this.center=new v(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Bt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=c,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const i=t===void 0||typeof t=="string";if(!i&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const s={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(s.userData=this.userData),i||(t.textures[this.uuid]=s),s}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==300)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case 1001:t.x=t.x<0?0:1;break;case 1002:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case 1001:t.y=t.y<0?0:1;break;case 1002:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}Tt.DEFAULT_IMAGE=null,Tt.DEFAULT_MAPPING=300,Tt.DEFAULT_ANISOTROPY=1;class Kt{constructor(t=0,i=0,s=0,e=1){this.isQuaternion=!0,this._x=t,this._y=i,this._z=s,this._w=e}static slerpFlat(t,i,s,e,n,r,a){let o=s[e+0],h=s[e+1],c=s[e+2],f=s[e+3];const l=n[r+0],d=n[r+1],m=n[r+2],y=n[r+3];if(a===0){t[i+0]=o,t[i+1]=h,t[i+2]=c,t[i+3]=f;return}if(a===1){t[i+0]=l,t[i+1]=d,t[i+2]=m,t[i+3]=y;return}if(f!==y||o!==l||h!==d||c!==m){let x=1-a;const p=o*l+h*d+c*m+f*y,g=p>=0?1:-1,w=1-p*p;if(w>Number.EPSILON){const b=Math.sqrt(w),z=Math.atan2(b,p*g);x=Math.sin(x*z)/b,a=Math.sin(a*z)/b}const M=a*g;if(o=o*x+l*M,h=h*x+d*M,c=c*x+m*M,f=f*x+y*M,x===1-a){const b=1/Math.sqrt(o*o+h*h+c*c+f*f);o*=b,h*=b,c*=b,f*=b}}t[i]=o,t[i+1]=h,t[i+2]=c,t[i+3]=f}static multiplyQuaternionsFlat(t,i,s,e,n,r){const a=s[e],o=s[e+1],h=s[e+2],c=s[e+3],f=n[r],l=n[r+1],d=n[r+2],m=n[r+3];return t[i]=a*m+c*f+o*d-h*l,t[i+1]=o*m+c*l+h*f-a*d,t[i+2]=h*m+c*d+a*l-o*f,t[i+3]=c*m-a*f-o*l-h*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,i,s,e){return this._x=t,this._y=i,this._z=s,this._w=e,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,i=!0){const s=t._x,e=t._y,n=t._z,r=t._order,a=Math.cos,o=Math.sin,h=a(s/2),c=a(e/2),f=a(n/2),l=o(s/2),d=o(e/2),m=o(n/2);switch(r){case"XYZ":this._x=l*c*f+h*d*m,this._y=h*d*f-l*c*m,this._z=h*c*m+l*d*f,this._w=h*c*f-l*d*m;break;case"YXZ":this._x=l*c*f+h*d*m,this._y=h*d*f-l*c*m,this._z=h*c*m-l*d*f,this._w=h*c*f+l*d*m;break;case"ZXY":this._x=l*c*f-h*d*m,this._y=h*d*f+l*c*m,this._z=h*c*m+l*d*f,this._w=h*c*f-l*d*m;break;case"ZYX":this._x=l*c*f-h*d*m,this._y=h*d*f+l*c*m,this._z=h*c*m-l*d*f,this._w=h*c*f+l*d*m;break;case"YZX":this._x=l*c*f+h*d*m,this._y=h*d*f+l*c*m,this._z=h*c*m-l*d*f,this._w=h*c*f-l*d*m;break;case"XZY":this._x=l*c*f-h*d*m,this._y=h*d*f-l*c*m,this._z=h*c*m+l*d*f,this._w=h*c*f+l*d*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return i===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,i){const s=i/2,e=Math.sin(s);return this._x=t.x*e,this._y=t.y*e,this._z=t.z*e,this._w=Math.cos(s),this._onChangeCallback(),this}setFromRotationMatrix(t){const i=t.elements,s=i[0],e=i[4],n=i[8],r=i[1],a=i[5],o=i[9],h=i[2],c=i[6],f=i[10],l=s+a+f;if(l>0){const d=.5/Math.sqrt(l+1);this._w=.25/d,this._x=(c-o)*d,this._y=(n-h)*d,this._z=(r-e)*d}else if(s>a&&s>f){const d=2*Math.sqrt(1+s-a-f);this._w=(c-o)/d,this._x=.25*d,this._y=(e+r)/d,this._z=(n+h)/d}else if(a>f){const d=2*Math.sqrt(1+a-s-f);this._w=(n-h)/d,this._x=(e+r)/d,this._y=.25*d,this._z=(o+c)/d}else{const d=2*Math.sqrt(1+f-s-a);this._w=(r-e)/d,this._x=(n+h)/d,this._y=(o+c)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,i){let s=t.dot(i)+1;return s<Number.EPSILON?(s=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=s):(this._x=0,this._y=-t.z,this._z=t.y,this._w=s)):(this._x=t.y*i.z-t.z*i.y,this._y=t.z*i.x-t.x*i.z,this._z=t.x*i.y-t.y*i.x,this._w=s),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(at(this.dot(t),-1,1)))}rotateTowards(t,i){const s=this.angleTo(t);if(s===0)return this;const e=Math.min(1,i/s);return this.slerp(t,e),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,i){const s=t._x,e=t._y,n=t._z,r=t._w,a=i._x,o=i._y,h=i._z,c=i._w;return this._x=s*c+r*a+e*h-n*o,this._y=e*c+r*o+n*a-s*h,this._z=n*c+r*h+s*o-e*a,this._w=r*c-s*a-e*o-n*h,this._onChangeCallback(),this}slerp(t,i){if(i===0)return this;if(i===1)return this.copy(t);const s=this._x,e=this._y,n=this._z,r=this._w;let a=r*t._w+s*t._x+e*t._y+n*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=r,this._x=s,this._y=e,this._z=n,this;const o=1-a*a;if(o<=Number.EPSILON){const d=1-i;return this._w=d*r+i*this._w,this._x=d*s+i*this._x,this._y=d*e+i*this._y,this._z=d*n+i*this._z,this.normalize(),this}const h=Math.sqrt(o),c=Math.atan2(h,a),f=Math.sin((1-i)*c)/h,l=Math.sin(i*c)/h;return this._w=r*f+this._w*l,this._x=s*f+this._x*l,this._y=e*f+this._y*l,this._z=n*f+this._z*l,this._onChangeCallback(),this}slerpQuaternions(t,i,s){return this.copy(t).slerp(i,s)}random(){const t=2*Math.PI*Math.random(),i=2*Math.PI*Math.random(),s=Math.random(),e=Math.sqrt(1-s),n=Math.sqrt(s);return this.set(e*Math.sin(t),e*Math.cos(t),n*Math.sin(i),n*Math.cos(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,i=0){return this._x=t[i],this._y=t[i+1],this._z=t[i+2],this._w=t[i+3],this._onChangeCallback(),this}toArray(t=[],i=0){return t[i]=this._x,t[i+1]=this._y,t[i+2]=this._z,t[i+3]=this._w,t}fromBufferAttribute(t,i){return this._x=t.getX(i),this._y=t.getY(i),this._z=t.getZ(i),this._w=t.getW(i),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class A{constructor(t=0,i=0,s=0){A.prototype.isVector3=!0,this.x=t,this.y=i,this.z=s}set(t,i,s){return s===void 0&&(s=this.z),this.x=t,this.y=i,this.z=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,i){switch(t){case 0:this.x=i;break;case 1:this.y=i;break;case 2:this.z=i;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this.z=t.z+i.z,this}addScaledVector(t,i){return this.x+=t.x*i,this.y+=t.y*i,this.z+=t.z*i,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this.z=t.z-i.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,i){return this.x=t.x*i.x,this.y=t.y*i.y,this.z=t.z*i.z,this}applyEuler(t){return this.applyQuaternion(Cs.setFromEuler(t))}applyAxisAngle(t,i){return this.applyQuaternion(Cs.setFromAxisAngle(t,i))}applyMatrix3(t){const i=this.x,s=this.y,e=this.z,n=t.elements;return this.x=n[0]*i+n[3]*s+n[6]*e,this.y=n[1]*i+n[4]*s+n[7]*e,this.z=n[2]*i+n[5]*s+n[8]*e,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const i=this.x,s=this.y,e=this.z,n=t.elements,r=1/(n[3]*i+n[7]*s+n[11]*e+n[15]);return this.x=(n[0]*i+n[4]*s+n[8]*e+n[12])*r,this.y=(n[1]*i+n[5]*s+n[9]*e+n[13])*r,this.z=(n[2]*i+n[6]*s+n[10]*e+n[14])*r,this}applyQuaternion(t){const i=this.x,s=this.y,e=this.z,n=t.x,r=t.y,a=t.z,o=t.w,h=2*(r*e-a*s),c=2*(a*i-n*e),f=2*(n*s-r*i);return this.x=i+o*h+r*f-a*c,this.y=s+o*c+a*h-n*f,this.z=e+o*f+n*c-r*h,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const i=this.x,s=this.y,e=this.z,n=t.elements;return this.x=n[0]*i+n[4]*s+n[8]*e,this.y=n[1]*i+n[5]*s+n[9]*e,this.z=n[2]*i+n[6]*s+n[10]*e,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this.z=Math.max(t.z,Math.min(i.z,this.z)),this}clampScalar(t,i){return this.x=Math.max(t,Math.min(i,this.x)),this.y=Math.max(t,Math.min(i,this.y)),this.z=Math.max(t,Math.min(i,this.z)),this}clampLength(t,i){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Math.max(t,Math.min(i,s)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this.z+=(t.z-this.z)*i,this}lerpVectors(t,i,s){return this.x=t.x+(i.x-t.x)*s,this.y=t.y+(i.y-t.y)*s,this.z=t.z+(i.z-t.z)*s,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,i){const s=t.x,e=t.y,n=t.z,r=i.x,a=i.y,o=i.z;return this.x=e*o-n*a,this.y=n*r-s*o,this.z=s*a-e*r,this}projectOnVector(t){const i=t.lengthSq();if(i===0)return this.set(0,0,0);const s=t.dot(this)/i;return this.copy(t).multiplyScalar(s)}projectOnPlane(t){return $i.copy(this).projectOnVector(t),this.sub($i)}reflect(t){return this.sub($i.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const i=Math.sqrt(this.lengthSq()*t.lengthSq());if(i===0)return Math.PI/2;const s=this.dot(t)/i;return Math.acos(at(s,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const i=this.x-t.x,s=this.y-t.y,e=this.z-t.z;return i*i+s*s+e*e}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,i,s){const e=Math.sin(i)*t;return this.x=e*Math.sin(s),this.y=Math.cos(i)*t,this.z=e*Math.cos(s),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,i,s){return this.x=t*Math.sin(i),this.y=s,this.z=t*Math.cos(i),this}setFromMatrixPosition(t){const i=t.elements;return this.x=i[12],this.y=i[13],this.z=i[14],this}setFromMatrixScale(t){const i=this.setFromMatrixColumn(t,0).length(),s=this.setFromMatrixColumn(t,1).length(),e=this.setFromMatrixColumn(t,2).length();return this.x=i,this.y=s,this.z=e,this}setFromMatrixColumn(t,i){return this.fromArray(t.elements,i*4)}setFromMatrix3Column(t,i){return this.fromArray(t.elements,i*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,i=0){return this.x=t[i],this.y=t[i+1],this.z=t[i+2],this}toArray(t=[],i=0){return t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t}fromBufferAttribute(t,i){return this.x=t.getX(i),this.y=t.getY(i),this.z=t.getZ(i),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,i=Math.random()*2-1,s=Math.sqrt(1-i*i);return this.x=s*Math.cos(t),this.y=i,this.z=s*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const $i=new A,Cs=new Kt;class W{constructor(t=new A(1/0,1/0,1/0),i=new A(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=i}set(t,i){return this.min.copy(t),this.max.copy(i),this}setFromArray(t){this.makeEmpty();for(let i=0,s=t.length;i<s;i+=3)this.expandByPoint(it.fromArray(t,i));return this}setFromBufferAttribute(t){this.makeEmpty();for(let i=0,s=t.count;i<s;i++)this.expandByPoint(it.fromBufferAttribute(t,i));return this}setFromPoints(t){this.makeEmpty();for(let i=0,s=t.length;i<s;i++)this.expandByPoint(t[i]);return this}setFromCenterAndSize(t,i){const s=it.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(s),this.max.copy(t).add(s),this}setFromObject(t,i=!1){return this.makeEmpty(),this.expandByObject(t,i)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,i=!1){t.updateWorldMatrix(!1,!1);const s=t.geometry;if(s!==void 0){const n=s.getAttribute("position");if(i===!0&&n!==void 0&&t.isInstancedMesh!==!0)for(let r=0,a=n.count;r<a;r++)t.isMesh===!0?t.getVertexPosition(r,it):it.fromBufferAttribute(n,r),it.applyMatrix4(t.matrixWorld),this.expandByPoint(it);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),mi.copy(t.boundingBox)):(s.boundingBox===null&&s.computeBoundingBox(),mi.copy(s.boundingBox)),mi.applyMatrix4(t.matrixWorld),this.union(mi)}const e=t.children;for(let n=0,r=e.length;n<r;n++)this.expandByObject(e[n],i);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,i){return i.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,it),it.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let i,s;return t.normal.x>0?(i=t.normal.x*this.min.x,s=t.normal.x*this.max.x):(i=t.normal.x*this.max.x,s=t.normal.x*this.min.x),t.normal.y>0?(i+=t.normal.y*this.min.y,s+=t.normal.y*this.max.y):(i+=t.normal.y*this.max.y,s+=t.normal.y*this.min.y),t.normal.z>0?(i+=t.normal.z*this.min.z,s+=t.normal.z*this.max.z):(i+=t.normal.z*this.max.z,s+=t.normal.z*this.min.z),i<=-t.constant&&s>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(ti),pi.subVectors(this.max,ti),Ft.subVectors(t.a,ti),Ut.subVectors(t.b,ti),Rt.subVectors(t.c,ti),gt.subVectors(Ut,Ft),bt.subVectors(Rt,Ut),Pt.subVectors(Ft,Rt);let i=[0,-gt.z,gt.y,0,-bt.z,bt.y,0,-Pt.z,Pt.y,gt.z,0,-gt.x,bt.z,0,-bt.x,Pt.z,0,-Pt.x,-gt.y,gt.x,0,-bt.y,bt.x,0,-Pt.y,Pt.x,0];return!Hi(i,Ft,Ut,Rt,pi)||(i=[1,0,0,0,1,0,0,0,1],!Hi(i,Ft,Ut,Rt,pi))?!1:(yi.crossVectors(gt,bt),i=[yi.x,yi.y,yi.z],Hi(i,Ft,Ut,Rt,pi))}clampPoint(t,i){return i.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,it).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(it).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(ut[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),ut[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),ut[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),ut[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),ut[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),ut[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),ut[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),ut[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(ut),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const ut=[new A,new A,new A,new A,new A,new A,new A,new A],it=new A,mi=new W,Ft=new A,Ut=new A,Rt=new A,gt=new A,bt=new A,Pt=new A,ti=new A,pi=new A,yi=new A,Ct=new A;function Hi(u,t,i,s,e){for(let n=0,r=u.length-3;n<=r;n+=3){Ct.fromArray(u,n);const a=e.x*Math.abs(Ct.x)+e.y*Math.abs(Ct.y)+e.z*Math.abs(Ct.z),o=t.dot(Ct),h=i.dot(Ct),c=s.dot(Ct);if(Math.max(-Math.max(o,h,c),Math.min(o,h,c))>a)return!1}return!0}const ue=new W,ii=new A,ji=new A;class Es{constructor(t=new A,i=-1){this.isSphere=!0,this.center=t,this.radius=i}set(t,i){return this.center.copy(t),this.radius=i,this}setFromPoints(t,i){const s=this.center;i!==void 0?s.copy(i):ue.setFromPoints(t).getCenter(s);let e=0;for(let n=0,r=t.length;n<r;n++)e=Math.max(e,s.distanceToSquared(t[n]));return this.radius=Math.sqrt(e),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const i=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=i*i}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,i){const s=this.center.distanceToSquared(t);return i.copy(t),s>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;ii.subVectors(t,this.center);const i=ii.lengthSq();if(i>this.radius*this.radius){const s=Math.sqrt(i),e=(s-this.radius)*.5;this.center.addScaledVector(ii,e/s),this.radius+=e}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(ji.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(ii.copy(t.center).add(ji)),this.expandByPoint(ii.copy(t.center).sub(ji))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}class q{constructor(t,i,s,e,n,r,a,o,h,c,f,l,d,m,y,x){q.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,i,s,e,n,r,a,o,h,c,f,l,d,m,y,x)}set(t,i,s,e,n,r,a,o,h,c,f,l,d,m,y,x){const p=this.elements;return p[0]=t,p[4]=i,p[8]=s,p[12]=e,p[1]=n,p[5]=r,p[9]=a,p[13]=o,p[2]=h,p[6]=c,p[10]=f,p[14]=l,p[3]=d,p[7]=m,p[11]=y,p[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new q().fromArray(this.elements)}copy(t){const i=this.elements,s=t.elements;return i[0]=s[0],i[1]=s[1],i[2]=s[2],i[3]=s[3],i[4]=s[4],i[5]=s[5],i[6]=s[6],i[7]=s[7],i[8]=s[8],i[9]=s[9],i[10]=s[10],i[11]=s[11],i[12]=s[12],i[13]=s[13],i[14]=s[14],i[15]=s[15],this}copyPosition(t){const i=this.elements,s=t.elements;return i[12]=s[12],i[13]=s[13],i[14]=s[14],this}setFromMatrix3(t){const i=t.elements;return this.set(i[0],i[3],i[6],0,i[1],i[4],i[7],0,i[2],i[5],i[8],0,0,0,0,1),this}extractBasis(t,i,s){return t.setFromMatrixColumn(this,0),i.setFromMatrixColumn(this,1),s.setFromMatrixColumn(this,2),this}makeBasis(t,i,s){return this.set(t.x,i.x,s.x,0,t.y,i.y,s.y,0,t.z,i.z,s.z,0,0,0,0,1),this}extractRotation(t){const i=this.elements,s=t.elements,e=1/kt.setFromMatrixColumn(t,0).length(),n=1/kt.setFromMatrixColumn(t,1).length(),r=1/kt.setFromMatrixColumn(t,2).length();return i[0]=s[0]*e,i[1]=s[1]*e,i[2]=s[2]*e,i[3]=0,i[4]=s[4]*n,i[5]=s[5]*n,i[6]=s[6]*n,i[7]=0,i[8]=s[8]*r,i[9]=s[9]*r,i[10]=s[10]*r,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}makeRotationFromEuler(t){const i=this.elements,s=t.x,e=t.y,n=t.z,r=Math.cos(s),a=Math.sin(s),o=Math.cos(e),h=Math.sin(e),c=Math.cos(n),f=Math.sin(n);if(t.order==="XYZ"){const l=r*c,d=r*f,m=a*c,y=a*f;i[0]=o*c,i[4]=-o*f,i[8]=h,i[1]=d+m*h,i[5]=l-y*h,i[9]=-a*o,i[2]=y-l*h,i[6]=m+d*h,i[10]=r*o}else if(t.order==="YXZ"){const l=o*c,d=o*f,m=h*c,y=h*f;i[0]=l+y*a,i[4]=m*a-d,i[8]=r*h,i[1]=r*f,i[5]=r*c,i[9]=-a,i[2]=d*a-m,i[6]=y+l*a,i[10]=r*o}else if(t.order==="ZXY"){const l=o*c,d=o*f,m=h*c,y=h*f;i[0]=l-y*a,i[4]=-r*f,i[8]=m+d*a,i[1]=d+m*a,i[5]=r*c,i[9]=y-l*a,i[2]=-r*h,i[6]=a,i[10]=r*o}else if(t.order==="ZYX"){const l=r*c,d=r*f,m=a*c,y=a*f;i[0]=o*c,i[4]=m*h-d,i[8]=l*h+y,i[1]=o*f,i[5]=y*h+l,i[9]=d*h-m,i[2]=-h,i[6]=a*o,i[10]=r*o}else if(t.order==="YZX"){const l=r*o,d=r*h,m=a*o,y=a*h;i[0]=o*c,i[4]=y-l*f,i[8]=m*f+d,i[1]=f,i[5]=r*c,i[9]=-a*c,i[2]=-h*c,i[6]=d*f+m,i[10]=l-y*f}else if(t.order==="XZY"){const l=r*o,d=r*h,m=a*o,y=a*h;i[0]=o*c,i[4]=-f,i[8]=h*c,i[1]=l*f+y,i[5]=r*c,i[9]=d*f-m,i[2]=m*f-d,i[6]=a*c,i[10]=y*f+l}return i[3]=0,i[7]=0,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}makeRotationFromQuaternion(t){return this.compose(fe,t,de)}lookAt(t,i,s){const e=this.elements;return Z.subVectors(t,i),Z.lengthSq()===0&&(Z.z=1),Z.normalize(),wt.crossVectors(s,Z),wt.lengthSq()===0&&(Math.abs(s.z)===1?Z.x+=1e-4:Z.z+=1e-4,Z.normalize(),wt.crossVectors(s,Z)),wt.normalize(),xi.crossVectors(Z,wt),e[0]=wt.x,e[4]=xi.x,e[8]=Z.x,e[1]=wt.y,e[5]=xi.y,e[9]=Z.y,e[2]=wt.z,e[6]=xi.z,e[10]=Z.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,i){const s=t.elements,e=i.elements,n=this.elements,r=s[0],a=s[4],o=s[8],h=s[12],c=s[1],f=s[5],l=s[9],d=s[13],m=s[2],y=s[6],x=s[10],p=s[14],g=s[3],w=s[7],M=s[11],b=s[15],z=e[0],_=e[4],S=e[8],B=e[12],T=e[1],C=e[5],P=e[9],E=e[13],F=e[2],U=e[6],R=e[10],j=e[14],ht=e[3],lt=e[7],vi=e[11],Wi=e[15];return n[0]=r*z+a*T+o*F+h*ht,n[4]=r*_+a*C+o*U+h*lt,n[8]=r*S+a*P+o*R+h*vi,n[12]=r*B+a*E+o*j+h*Wi,n[1]=c*z+f*T+l*F+d*ht,n[5]=c*_+f*C+l*U+d*lt,n[9]=c*S+f*P+l*R+d*vi,n[13]=c*B+f*E+l*j+d*Wi,n[2]=m*z+y*T+x*F+p*ht,n[6]=m*_+y*C+x*U+p*lt,n[10]=m*S+y*P+x*R+p*vi,n[14]=m*B+y*E+x*j+p*Wi,n[3]=g*z+w*T+M*F+b*ht,n[7]=g*_+w*C+M*U+b*lt,n[11]=g*S+w*P+M*R+b*vi,n[15]=g*B+w*E+M*j+b*Wi,this}multiplyScalar(t){const i=this.elements;return i[0]*=t,i[4]*=t,i[8]*=t,i[12]*=t,i[1]*=t,i[5]*=t,i[9]*=t,i[13]*=t,i[2]*=t,i[6]*=t,i[10]*=t,i[14]*=t,i[3]*=t,i[7]*=t,i[11]*=t,i[15]*=t,this}determinant(){const t=this.elements,i=t[0],s=t[4],e=t[8],n=t[12],r=t[1],a=t[5],o=t[9],h=t[13],c=t[2],f=t[6],l=t[10],d=t[14],m=t[3],y=t[7],x=t[11],p=t[15];return m*(+n*o*f-e*h*f-n*a*l+s*h*l+e*a*d-s*o*d)+y*(+i*o*d-i*h*l+n*r*l-e*r*d+e*h*c-n*o*c)+x*(+i*h*f-i*a*d-n*r*f+s*r*d+n*a*c-s*h*c)+p*(-e*a*c-i*o*f+i*a*l+e*r*f-s*r*l+s*o*c)}transpose(){const t=this.elements;let i;return i=t[1],t[1]=t[4],t[4]=i,i=t[2],t[2]=t[8],t[8]=i,i=t[6],t[6]=t[9],t[9]=i,i=t[3],t[3]=t[12],t[12]=i,i=t[7],t[7]=t[13],t[13]=i,i=t[11],t[11]=t[14],t[14]=i,this}setPosition(t,i,s){const e=this.elements;return t.isVector3?(e[12]=t.x,e[13]=t.y,e[14]=t.z):(e[12]=t,e[13]=i,e[14]=s),this}invert(){const t=this.elements,i=t[0],s=t[1],e=t[2],n=t[3],r=t[4],a=t[5],o=t[6],h=t[7],c=t[8],f=t[9],l=t[10],d=t[11],m=t[12],y=t[13],x=t[14],p=t[15],g=f*x*h-y*l*h+y*o*d-a*x*d-f*o*p+a*l*p,w=m*l*h-c*x*h-m*o*d+r*x*d+c*o*p-r*l*p,M=c*y*h-m*f*h+m*a*d-r*y*d-c*a*p+r*f*p,b=m*f*o-c*y*o-m*a*l+r*y*l+c*a*x-r*f*x,z=i*g+s*w+e*M+n*b;if(z===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const _=1/z;return t[0]=g*_,t[1]=(y*l*n-f*x*n-y*e*d+s*x*d+f*e*p-s*l*p)*_,t[2]=(a*x*n-y*o*n+y*e*h-s*x*h-a*e*p+s*o*p)*_,t[3]=(f*o*n-a*l*n-f*e*h+s*l*h+a*e*d-s*o*d)*_,t[4]=w*_,t[5]=(c*x*n-m*l*n+m*e*d-i*x*d-c*e*p+i*l*p)*_,t[6]=(m*o*n-r*x*n-m*e*h+i*x*h+r*e*p-i*o*p)*_,t[7]=(r*l*n-c*o*n+c*e*h-i*l*h-r*e*d+i*o*d)*_,t[8]=M*_,t[9]=(m*f*n-c*y*n-m*s*d+i*y*d+c*s*p-i*f*p)*_,t[10]=(r*y*n-m*a*n+m*s*h-i*y*h-r*s*p+i*a*p)*_,t[11]=(c*a*n-r*f*n-c*s*h+i*f*h+r*s*d-i*a*d)*_,t[12]=b*_,t[13]=(c*y*e-m*f*e+m*s*l-i*y*l-c*s*x+i*f*x)*_,t[14]=(m*a*e-r*y*e-m*s*o+i*y*o+r*s*x-i*a*x)*_,t[15]=(r*f*e-c*a*e+c*s*o-i*f*o-r*s*l+i*a*l)*_,this}scale(t){const i=this.elements,s=t.x,e=t.y,n=t.z;return i[0]*=s,i[4]*=e,i[8]*=n,i[1]*=s,i[5]*=e,i[9]*=n,i[2]*=s,i[6]*=e,i[10]*=n,i[3]*=s,i[7]*=e,i[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,i=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],s=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],e=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(i,s,e))}makeTranslation(t,i,s){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,i,0,0,1,s,0,0,0,1),this}makeRotationX(t){const i=Math.cos(t),s=Math.sin(t);return this.set(1,0,0,0,0,i,-s,0,0,s,i,0,0,0,0,1),this}makeRotationY(t){const i=Math.cos(t),s=Math.sin(t);return this.set(i,0,s,0,0,1,0,0,-s,0,i,0,0,0,0,1),this}makeRotationZ(t){const i=Math.cos(t),s=Math.sin(t);return this.set(i,-s,0,0,s,i,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,i){const s=Math.cos(i),e=Math.sin(i),n=1-s,r=t.x,a=t.y,o=t.z,h=n*r,c=n*a;return this.set(h*r+s,h*a-e*o,h*o+e*a,0,h*a+e*o,c*a+s,c*o-e*r,0,h*o-e*a,c*o+e*r,n*o*o+s,0,0,0,0,1),this}makeScale(t,i,s){return this.set(t,0,0,0,0,i,0,0,0,0,s,0,0,0,0,1),this}makeShear(t,i,s,e,n,r){return this.set(1,s,n,0,t,1,r,0,i,e,1,0,0,0,0,1),this}compose(t,i,s){const e=this.elements,n=i._x,r=i._y,a=i._z,o=i._w,h=n+n,c=r+r,f=a+a,l=n*h,d=n*c,m=n*f,y=r*c,x=r*f,p=a*f,g=o*h,w=o*c,M=o*f,b=s.x,z=s.y,_=s.z;return e[0]=(1-(y+p))*b,e[1]=(d+M)*b,e[2]=(m-w)*b,e[3]=0,e[4]=(d-M)*z,e[5]=(1-(l+p))*z,e[6]=(x+g)*z,e[7]=0,e[8]=(m+w)*_,e[9]=(x-g)*_,e[10]=(1-(l+y))*_,e[11]=0,e[12]=t.x,e[13]=t.y,e[14]=t.z,e[15]=1,this}decompose(t,i,s){const e=this.elements;let n=kt.set(e[0],e[1],e[2]).length();const r=kt.set(e[4],e[5],e[6]).length(),a=kt.set(e[8],e[9],e[10]).length();this.determinant()<0&&(n=-n),t.x=e[12],t.y=e[13],t.z=e[14],st.copy(this);const h=1/n,c=1/r,f=1/a;return st.elements[0]*=h,st.elements[1]*=h,st.elements[2]*=h,st.elements[4]*=c,st.elements[5]*=c,st.elements[6]*=c,st.elements[8]*=f,st.elements[9]*=f,st.elements[10]*=f,i.setFromRotationMatrix(st),s.x=n,s.y=r,s.z=a,this}makePerspective(t,i,s,e,n,r,a=2e3){const o=this.elements,h=2*n/(i-t),c=2*n/(s-e),f=(i+t)/(i-t),l=(s+e)/(s-e);let d,m;if(a===2e3)d=-(r+n)/(r-n),m=-2*r*n/(r-n);else if(a===2001)d=-r/(r-n),m=-r*n/(r-n);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return o[0]=h,o[4]=0,o[8]=f,o[12]=0,o[1]=0,o[5]=c,o[9]=l,o[13]=0,o[2]=0,o[6]=0,o[10]=d,o[14]=m,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,i,s,e,n,r,a=2e3){const o=this.elements,h=1/(i-t),c=1/(s-e),f=1/(r-n),l=(i+t)*h,d=(s+e)*c;let m,y;if(a===2e3)m=(r+n)*f,y=-2*f;else if(a===2001)m=n*f,y=-1*f;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return o[0]=2*h,o[4]=0,o[8]=0,o[12]=-l,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-d,o[2]=0,o[6]=0,o[10]=y,o[14]=-m,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const i=this.elements,s=t.elements;for(let e=0;e<16;e++)if(i[e]!==s[e])return!1;return!0}fromArray(t,i=0){for(let s=0;s<16;s++)this.elements[s]=t[s+i];return this}toArray(t=[],i=0){const s=this.elements;return t[i]=s[0],t[i+1]=s[1],t[i+2]=s[2],t[i+3]=s[3],t[i+4]=s[4],t[i+5]=s[5],t[i+6]=s[6],t[i+7]=s[7],t[i+8]=s[8],t[i+9]=s[9],t[i+10]=s[10],t[i+11]=s[11],t[i+12]=s[12],t[i+13]=s[13],t[i+14]=s[14],t[i+15]=s[15],t}}const kt=new A,st=new q,fe=new A(0,0,0),de=new A(1,1,1),wt=new A,xi=new A,Z=new A,Fs=new q,Us=new Kt;class gi{constructor(t=0,i=0,s=0,e=gi.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=i,this._z=s,this._order=e}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,i,s,e=this._order){return this._x=t,this._y=i,this._z=s,this._order=e,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,i=this._order,s=!0){const e=t.elements,n=e[0],r=e[4],a=e[8],o=e[1],h=e[5],c=e[9],f=e[2],l=e[6],d=e[10];switch(i){case"XYZ":this._y=Math.asin(at(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-r,n)):(this._x=Math.atan2(l,h),this._z=0);break;case"YXZ":this._x=Math.asin(-at(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,h)):(this._y=Math.atan2(-f,n),this._z=0);break;case"ZXY":this._x=Math.asin(at(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(-f,d),this._z=Math.atan2(-r,h)):(this._y=0,this._z=Math.atan2(o,n));break;case"ZYX":this._y=Math.asin(-at(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(l,d),this._z=Math.atan2(o,n)):(this._x=0,this._z=Math.atan2(-r,h));break;case"YZX":this._z=Math.asin(at(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,h),this._y=Math.atan2(-f,n)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-at(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(l,h),this._y=Math.atan2(a,n)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+i)}return this._order=i,s===!0&&this._onChangeCallback(),this}setFromQuaternion(t,i,s){return Fs.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Fs,i,s)}setFromVector3(t,i=this._order){return this.set(t.x,t.y,t.z,i)}reorder(t){return Us.setFromEuler(this),this.setFromQuaternion(Us,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],i=0){return t[i]=this._x,t[i+1]=this._y,t[i+2]=this._z,t[i+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}gi.DEFAULT_ORDER="XYZ";class me{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let pe=0;const Rs=new A,Lt=new Kt,ft=new q,bi=new A,si=new A,ye=new A,xe=new Kt,ks=new A(1,0,0),Ls=new A(0,1,0),Is=new A(0,0,1),Vs={type:"added"},ge={type:"removed"},It={type:"childadded",child:null},Gi={type:"childremoved",child:null};class _t extends Xi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:pe++}),this.uuid=di(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=_t.DEFAULT_UP.clone();const t=new A,i=new gi,s=new Kt,e=new A(1,1,1);function n(){s.setFromEuler(i,!1)}function r(){i.setFromQuaternion(s,void 0,!1)}i._onChange(n),s._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:i},quaternion:{configurable:!0,enumerable:!0,value:s},scale:{configurable:!0,enumerable:!0,value:e},modelViewMatrix:{value:new q},normalMatrix:{value:new Bt}}),this.matrix=new q,this.matrixWorld=new q,this.matrixAutoUpdate=_t.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=_t.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new me,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,i){this.quaternion.setFromAxisAngle(t,i)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,i){return Lt.setFromAxisAngle(t,i),this.quaternion.multiply(Lt),this}rotateOnWorldAxis(t,i){return Lt.setFromAxisAngle(t,i),this.quaternion.premultiply(Lt),this}rotateX(t){return this.rotateOnAxis(ks,t)}rotateY(t){return this.rotateOnAxis(Ls,t)}rotateZ(t){return this.rotateOnAxis(Is,t)}translateOnAxis(t,i){return Rs.copy(t).applyQuaternion(this.quaternion),this.position.add(Rs.multiplyScalar(i)),this}translateX(t){return this.translateOnAxis(ks,t)}translateY(t){return this.translateOnAxis(Ls,t)}translateZ(t){return this.translateOnAxis(Is,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(ft.copy(this.matrixWorld).invert())}lookAt(t,i,s){t.isVector3?bi.copy(t):bi.set(t,i,s);const e=this.parent;this.updateWorldMatrix(!0,!1),si.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ft.lookAt(si,bi,this.up):ft.lookAt(bi,si,this.up),this.quaternion.setFromRotationMatrix(ft),e&&(ft.extractRotation(e.matrixWorld),Lt.setFromRotationMatrix(ft),this.quaternion.premultiply(Lt.invert()))}add(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.add(arguments[i]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Vs),It.child=t,this.dispatchEvent(It),It.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let s=0;s<arguments.length;s++)this.remove(arguments[s]);return this}const i=this.children.indexOf(t);return i!==-1&&(t.parent=null,this.children.splice(i,1),t.dispatchEvent(ge),Gi.child=t,this.dispatchEvent(Gi),Gi.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),ft.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),ft.multiply(t.parent.matrixWorld)),t.applyMatrix4(ft),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Vs),It.child=t,this.dispatchEvent(It),It.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,i){if(this[t]===i)return this;for(let s=0,e=this.children.length;s<e;s++){const r=this.children[s].getObjectByProperty(t,i);if(r!==void 0)return r}}getObjectsByProperty(t,i,s=[]){this[t]===i&&s.push(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].getObjectsByProperty(t,i,s);return s}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(si,t,ye),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(si,xe,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const i=this.matrixWorld.elements;return t.set(i[8],i[9],i[10]).normalize()}raycast(){}traverse(t){t(this);const i=this.children;for(let s=0,e=i.length;s<e;s++)i[s].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const i=this.children;for(let s=0,e=i.length;s<e;s++)i[s].traverseVisible(t)}traverseAncestors(t){const i=this.parent;i!==null&&(t(i),i.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const i=this.children;for(let s=0,e=i.length;s<e;s++)i[s].updateMatrixWorld(t)}updateWorldMatrix(t,i){const s=this.parent;if(t===!0&&s!==null&&s.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),i===!0){const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].updateWorldMatrix(!1,!0)}}toJSON(t){const i=t===void 0||typeof t=="string",s={};i&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},s.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const e={};e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.castShadow===!0&&(e.castShadow=!0),this.receiveShadow===!0&&(e.receiveShadow=!0),this.visible===!1&&(e.visible=!1),this.frustumCulled===!1&&(e.frustumCulled=!1),this.renderOrder!==0&&(e.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(e.userData=this.userData),e.layers=this.layers.mask,e.matrix=this.matrix.toArray(),e.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(e.matrixAutoUpdate=!1),this.isInstancedMesh&&(e.type="InstancedMesh",e.count=this.count,e.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(e.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(e.type="BatchedMesh",e.perObjectFrustumCulled=this.perObjectFrustumCulled,e.sortObjects=this.sortObjects,e.drawRanges=this._drawRanges,e.reservedRanges=this._reservedRanges,e.visibility=this._visibility,e.active=this._active,e.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),e.maxInstanceCount=this._maxInstanceCount,e.maxVertexCount=this._maxVertexCount,e.maxIndexCount=this._maxIndexCount,e.geometryInitialized=this._geometryInitialized,e.geometryCount=this._geometryCount,e.matricesTexture=this._matricesTexture.toJSON(t),this._colorsTexture!==null&&(e.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(e.boundingSphere={center:e.boundingSphere.center.toArray(),radius:e.boundingSphere.radius}),this.boundingBox!==null&&(e.boundingBox={min:e.boundingBox.min.toArray(),max:e.boundingBox.max.toArray()}));function n(a,o){return a[o.uuid]===void 0&&(a[o.uuid]=o.toJSON(t)),o.uuid}if(this.isScene)this.background&&(this.background.isColor?e.background=this.background.toJSON():this.background.isTexture&&(e.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(e.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){e.geometry=n(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const o=a.shapes;if(Array.isArray(o))for(let h=0,c=o.length;h<c;h++){const f=o[h];n(t.shapes,f)}else n(t.shapes,o)}}if(this.isSkinnedMesh&&(e.bindMode=this.bindMode,e.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(t.skeletons,this.skeleton),e.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let o=0,h=this.material.length;o<h;o++)a.push(n(t.materials,this.material[o]));e.material=a}else e.material=n(t.materials,this.material);if(this.children.length>0){e.children=[];for(let a=0;a<this.children.length;a++)e.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){e.animations=[];for(let a=0;a<this.animations.length;a++){const o=this.animations[a];e.animations.push(n(t.animations,o))}}if(i){const a=r(t.geometries),o=r(t.materials),h=r(t.textures),c=r(t.images),f=r(t.shapes),l=r(t.skeletons),d=r(t.animations),m=r(t.nodes);a.length>0&&(s.geometries=a),o.length>0&&(s.materials=o),h.length>0&&(s.textures=h),c.length>0&&(s.images=c),f.length>0&&(s.shapes=f),l.length>0&&(s.skeletons=l),d.length>0&&(s.animations=d),m.length>0&&(s.nodes=m)}return s.object=e,s;function r(a){const o=[];for(const h in a){const c=a[h];delete c.metadata,o.push(c)}return o}}clone(t){return new this.constructor().copy(this,t)}copy(t,i=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),i===!0)for(let s=0;s<t.children.length;s++){const e=t.children[s];this.add(e.clone())}return this}}_t.DEFAULT_UP=new A(0,1,0),_t.DEFAULT_MATRIX_AUTO_UPDATE=!0,_t.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const et=new A,dt=new A,Ji=new A,mt=new A,Vt=new A,Nt=new A,Ns=new A,Qi=new A,Ki=new A,ts=new A;class nt{constructor(t=new A,i=new A,s=new A){this.a=t,this.b=i,this.c=s}static getNormal(t,i,s,e){e.subVectors(s,i),et.subVectors(t,i),e.cross(et);const n=e.lengthSq();return n>0?e.multiplyScalar(1/Math.sqrt(n)):e.set(0,0,0)}static getBarycoord(t,i,s,e,n){et.subVectors(e,i),dt.subVectors(s,i),Ji.subVectors(t,i);const r=et.dot(et),a=et.dot(dt),o=et.dot(Ji),h=dt.dot(dt),c=dt.dot(Ji),f=r*h-a*a;if(f===0)return n.set(0,0,0),null;const l=1/f,d=(h*o-a*c)*l,m=(r*c-a*o)*l;return n.set(1-d-m,m,d)}static containsPoint(t,i,s,e){return this.getBarycoord(t,i,s,e,mt)===null?!1:mt.x>=0&&mt.y>=0&&mt.x+mt.y<=1}static getInterpolation(t,i,s,e,n,r,a,o){return this.getBarycoord(t,i,s,e,mt)===null?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(n,mt.x),o.addScaledVector(r,mt.y),o.addScaledVector(a,mt.z),o)}static isFrontFacing(t,i,s,e){return et.subVectors(s,i),dt.subVectors(t,i),et.cross(dt).dot(e)<0}set(t,i,s){return this.a.copy(t),this.b.copy(i),this.c.copy(s),this}setFromPointsAndIndices(t,i,s,e){return this.a.copy(t[i]),this.b.copy(t[s]),this.c.copy(t[e]),this}setFromAttributeAndIndices(t,i,s,e){return this.a.fromBufferAttribute(t,i),this.b.fromBufferAttribute(t,s),this.c.fromBufferAttribute(t,e),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return et.subVectors(this.c,this.b),dt.subVectors(this.a,this.b),et.cross(dt).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return nt.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,i){return nt.getBarycoord(t,this.a,this.b,this.c,i)}getInterpolation(t,i,s,e,n){return nt.getInterpolation(t,this.a,this.b,this.c,i,s,e,n)}containsPoint(t){return nt.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return nt.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,i){const s=this.a,e=this.b,n=this.c;let r,a;Vt.subVectors(e,s),Nt.subVectors(n,s),Qi.subVectors(t,s);const o=Vt.dot(Qi),h=Nt.dot(Qi);if(o<=0&&h<=0)return i.copy(s);Ki.subVectors(t,e);const c=Vt.dot(Ki),f=Nt.dot(Ki);if(c>=0&&f<=c)return i.copy(e);const l=o*f-c*h;if(l<=0&&o>=0&&c<=0)return r=o/(o-c),i.copy(s).addScaledVector(Vt,r);ts.subVectors(t,n);const d=Vt.dot(ts),m=Nt.dot(ts);if(m>=0&&d<=m)return i.copy(n);const y=d*h-o*m;if(y<=0&&h>=0&&m<=0)return a=h/(h-m),i.copy(s).addScaledVector(Nt,a);const x=c*m-d*f;if(x<=0&&f-c>=0&&d-m>=0)return Ns.subVectors(n,e),a=(f-c)/(f-c+(d-m)),i.copy(e).addScaledVector(Ns,a);const p=1/(x+y+l);return r=y*p,a=l*p,i.copy(s).addScaledVector(Vt,r).addScaledVector(Nt,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const I=new A,wi=new v;class ct{constructor(t,i,s=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=i,this.count=t!==void 0?t.length/i:0,this.normalized=s,this.usage=35044,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}get updateRange(){return oe("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(t){return this.usage=t,this}addUpdateRange(t,i){this.updateRanges.push({start:t,count:i})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,i,s){t*=this.itemSize,s*=i.itemSize;for(let e=0,n=this.itemSize;e<n;e++)this.array[t+e]=i.array[s+e];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let i=0,s=this.count;i<s;i++)wi.fromBufferAttribute(this,i),wi.applyMatrix3(t),this.setXY(i,wi.x,wi.y);else if(this.itemSize===3)for(let i=0,s=this.count;i<s;i++)I.fromBufferAttribute(this,i),I.applyMatrix3(t),this.setXYZ(i,I.x,I.y,I.z);return this}applyMatrix4(t){for(let i=0,s=this.count;i<s;i++)I.fromBufferAttribute(this,i),I.applyMatrix4(t),this.setXYZ(i,I.x,I.y,I.z);return this}applyNormalMatrix(t){for(let i=0,s=this.count;i<s;i++)I.fromBufferAttribute(this,i),I.applyNormalMatrix(t),this.setXYZ(i,I.x,I.y,I.z);return this}transformDirection(t){for(let i=0,s=this.count;i<s;i++)I.fromBufferAttribute(this,i),I.transformDirection(t),this.setXYZ(i,I.x,I.y,I.z);return this}set(t,i=0){return this.array.set(t,i),this}getComponent(t,i){let s=this.array[t*this.itemSize+i];return this.normalized&&(s=Qt(s,this.array)),s}setComponent(t,i,s){return this.normalized&&(s=O(s,this.array)),this.array[t*this.itemSize+i]=s,this}getX(t){let i=this.array[t*this.itemSize];return this.normalized&&(i=Qt(i,this.array)),i}setX(t,i){return this.normalized&&(i=O(i,this.array)),this.array[t*this.itemSize]=i,this}getY(t){let i=this.array[t*this.itemSize+1];return this.normalized&&(i=Qt(i,this.array)),i}setY(t,i){return this.normalized&&(i=O(i,this.array)),this.array[t*this.itemSize+1]=i,this}getZ(t){let i=this.array[t*this.itemSize+2];return this.normalized&&(i=Qt(i,this.array)),i}setZ(t,i){return this.normalized&&(i=O(i,this.array)),this.array[t*this.itemSize+2]=i,this}getW(t){let i=this.array[t*this.itemSize+3];return this.normalized&&(i=Qt(i,this.array)),i}setW(t,i){return this.normalized&&(i=O(i,this.array)),this.array[t*this.itemSize+3]=i,this}setXY(t,i,s){return t*=this.itemSize,this.normalized&&(i=O(i,this.array),s=O(s,this.array)),this.array[t+0]=i,this.array[t+1]=s,this}setXYZ(t,i,s,e){return t*=this.itemSize,this.normalized&&(i=O(i,this.array),s=O(s,this.array),e=O(e,this.array)),this.array[t+0]=i,this.array[t+1]=s,this.array[t+2]=e,this}setXYZW(t,i,s,e,n){return t*=this.itemSize,this.normalized&&(i=O(i,this.array),s=O(s,this.array),e=O(e,this.array),n=O(n,this.array)),this.array[t+0]=i,this.array[t+1]=s,this.array[t+2]=e,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==35044&&(t.usage=this.usage),t}}class be extends ct{constructor(t,i,s){super(new Uint16Array(t),i,s)}}class we extends ct{constructor(t,i,s){super(new Uint32Array(t),i,s)}}class _e extends ct{constructor(t,i,s){super(new Float32Array(t),i,s)}}let Me=0;const G=new q,is=new _t,qt=new A,$=new W,ei=new W,N=new A;class ss extends Xi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Me++}),this.uuid=di(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(re(t)?we:be)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,i){return this.attributes[t]=i,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,i,s=0){this.groups.push({start:t,count:i,materialIndex:s})}clearGroups(){this.groups=[]}setDrawRange(t,i){this.drawRange.start=t,this.drawRange.count=i}applyMatrix4(t){const i=this.attributes.position;i!==void 0&&(i.applyMatrix4(t),i.needsUpdate=!0);const s=this.attributes.normal;if(s!==void 0){const n=new Bt().getNormalMatrix(t);s.applyNormalMatrix(n),s.needsUpdate=!0}const e=this.attributes.tangent;return e!==void 0&&(e.transformDirection(t),e.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return G.makeRotationFromQuaternion(t),this.applyMatrix4(G),this}rotateX(t){return G.makeRotationX(t),this.applyMatrix4(G),this}rotateY(t){return G.makeRotationY(t),this.applyMatrix4(G),this}rotateZ(t){return G.makeRotationZ(t),this.applyMatrix4(G),this}translate(t,i,s){return G.makeTranslation(t,i,s),this.applyMatrix4(G),this}scale(t,i,s){return G.makeScale(t,i,s),this.applyMatrix4(G),this}lookAt(t){return is.lookAt(t),is.updateMatrix(),this.applyMatrix4(is.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(qt).negate(),this.translate(qt.x,qt.y,qt.z),this}setFromPoints(t){const i=[];for(let s=0,e=t.length;s<e;s++){const n=t[s];i.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new _e(i,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new W);const t=this.attributes.position,i=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new A(-1/0,-1/0,-1/0),new A(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),i)for(let s=0,e=i.length;s<e;s++){const n=i[s];$.setFromBufferAttribute(n),this.morphTargetsRelative?(N.addVectors(this.boundingBox.min,$.min),this.boundingBox.expandByPoint(N),N.addVectors(this.boundingBox.max,$.max),this.boundingBox.expandByPoint(N)):(this.boundingBox.expandByPoint($.min),this.boundingBox.expandByPoint($.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Es);const t=this.attributes.position,i=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new A,1/0);return}if(t){const s=this.boundingSphere.center;if($.setFromBufferAttribute(t),i)for(let n=0,r=i.length;n<r;n++){const a=i[n];ei.setFromBufferAttribute(a),this.morphTargetsRelative?(N.addVectors($.min,ei.min),$.expandByPoint(N),N.addVectors($.max,ei.max),$.expandByPoint(N)):($.expandByPoint(ei.min),$.expandByPoint(ei.max))}$.getCenter(s);let e=0;for(let n=0,r=t.count;n<r;n++)N.fromBufferAttribute(t,n),e=Math.max(e,s.distanceToSquared(N));if(i)for(let n=0,r=i.length;n<r;n++){const a=i[n],o=this.morphTargetsRelative;for(let h=0,c=a.count;h<c;h++)N.fromBufferAttribute(a,h),o&&(qt.fromBufferAttribute(t,h),N.add(qt)),e=Math.max(e,s.distanceToSquared(N))}this.boundingSphere.radius=Math.sqrt(e),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,i=this.attributes;if(t===null||i.position===void 0||i.normal===void 0||i.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const s=i.position,e=i.normal,n=i.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ct(new Float32Array(4*s.count),4));const r=this.getAttribute("tangent"),a=[],o=[];for(let S=0;S<s.count;S++)a[S]=new A,o[S]=new A;const h=new A,c=new A,f=new A,l=new v,d=new v,m=new v,y=new A,x=new A;function p(S,B,T){h.fromBufferAttribute(s,S),c.fromBufferAttribute(s,B),f.fromBufferAttribute(s,T),l.fromBufferAttribute(n,S),d.fromBufferAttribute(n,B),m.fromBufferAttribute(n,T),c.sub(h),f.sub(h),d.sub(l),m.sub(l);const C=1/(d.x*m.y-m.x*d.y);isFinite(C)&&(y.copy(c).multiplyScalar(m.y).addScaledVector(f,-d.y).multiplyScalar(C),x.copy(f).multiplyScalar(d.x).addScaledVector(c,-m.x).multiplyScalar(C),a[S].add(y),a[B].add(y),a[T].add(y),o[S].add(x),o[B].add(x),o[T].add(x))}let g=this.groups;g.length===0&&(g=[{start:0,count:t.count}]);for(let S=0,B=g.length;S<B;++S){const T=g[S],C=T.start,P=T.count;for(let E=C,F=C+P;E<F;E+=3)p(t.getX(E+0),t.getX(E+1),t.getX(E+2))}const w=new A,M=new A,b=new A,z=new A;function _(S){b.fromBufferAttribute(e,S),z.copy(b);const B=a[S];w.copy(B),w.sub(b.multiplyScalar(b.dot(B))).normalize(),M.crossVectors(z,B);const C=M.dot(o[S])<0?-1:1;r.setXYZW(S,w.x,w.y,w.z,C)}for(let S=0,B=g.length;S<B;++S){const T=g[S],C=T.start,P=T.count;for(let E=C,F=C+P;E<F;E+=3)_(t.getX(E+0)),_(t.getX(E+1)),_(t.getX(E+2))}}computeVertexNormals(){const t=this.index,i=this.getAttribute("position");if(i!==void 0){let s=this.getAttribute("normal");if(s===void 0)s=new ct(new Float32Array(i.count*3),3),this.setAttribute("normal",s);else for(let l=0,d=s.count;l<d;l++)s.setXYZ(l,0,0,0);const e=new A,n=new A,r=new A,a=new A,o=new A,h=new A,c=new A,f=new A;if(t)for(let l=0,d=t.count;l<d;l+=3){const m=t.getX(l+0),y=t.getX(l+1),x=t.getX(l+2);e.fromBufferAttribute(i,m),n.fromBufferAttribute(i,y),r.fromBufferAttribute(i,x),c.subVectors(r,n),f.subVectors(e,n),c.cross(f),a.fromBufferAttribute(s,m),o.fromBufferAttribute(s,y),h.fromBufferAttribute(s,x),a.add(c),o.add(c),h.add(c),s.setXYZ(m,a.x,a.y,a.z),s.setXYZ(y,o.x,o.y,o.z),s.setXYZ(x,h.x,h.y,h.z)}else for(let l=0,d=i.count;l<d;l+=3)e.fromBufferAttribute(i,l+0),n.fromBufferAttribute(i,l+1),r.fromBufferAttribute(i,l+2),c.subVectors(r,n),f.subVectors(e,n),c.cross(f),s.setXYZ(l+0,c.x,c.y,c.z),s.setXYZ(l+1,c.x,c.y,c.z),s.setXYZ(l+2,c.x,c.y,c.z);this.normalizeNormals(),s.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let i=0,s=t.count;i<s;i++)N.fromBufferAttribute(t,i),N.normalize(),t.setXYZ(i,N.x,N.y,N.z)}toNonIndexed(){function t(a,o){const h=a.array,c=a.itemSize,f=a.normalized,l=new h.constructor(o.length*c);let d=0,m=0;for(let y=0,x=o.length;y<x;y++){a.isInterleavedBufferAttribute?d=o[y]*a.data.stride+a.offset:d=o[y]*c;for(let p=0;p<c;p++)l[m++]=h[d++]}return new ct(l,c,f)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const i=new ss,s=this.index.array,e=this.attributes;for(const a in e){const o=e[a],h=t(o,s);i.setAttribute(a,h)}const n=this.morphAttributes;for(const a in n){const o=[],h=n[a];for(let c=0,f=h.length;c<f;c++){const l=h[c],d=t(l,s);o.push(d)}i.morphAttributes[a]=o}i.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let a=0,o=r.length;a<o;a++){const h=r[a];i.addGroup(h.start,h.count,h.materialIndex)}return i}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const o=this.parameters;for(const h in o)o[h]!==void 0&&(t[h]=o[h]);return t}t.data={attributes:{}};const i=this.index;i!==null&&(t.data.index={type:i.array.constructor.name,array:Array.prototype.slice.call(i.array)});const s=this.attributes;for(const o in s){const h=s[o];t.data.attributes[o]=h.toJSON(t.data)}const e={};let n=!1;for(const o in this.morphAttributes){const h=this.morphAttributes[o],c=[];for(let f=0,l=h.length;f<l;f++){const d=h[f];c.push(d.toJSON(t.data))}c.length>0&&(e[o]=c,n=!0)}n&&(t.data.morphAttributes=e,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const i={};this.name=t.name;const s=t.index;s!==null&&this.setIndex(s.clone(i));const e=t.attributes;for(const h in e){const c=e[h];this.setAttribute(h,c.clone(i))}const n=t.morphAttributes;for(const h in n){const c=[],f=n[h];for(let l=0,d=f.length;l<d;l++)c.push(f[l].clone(i));this.morphAttributes[h]=c}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let h=0,c=r.length;h<c;h++){const f=r[h];this.addGroup(f.start,f.count,f.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const o=t.boundingSphere;return o!==null&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const es=new A,Ae=new A,ze=new Bt;class qs{constructor(t=new A(1,0,0),i=0){this.isPlane=!0,this.normal=t,this.constant=i}set(t,i){return this.normal.copy(t),this.constant=i,this}setComponents(t,i,s,e){return this.normal.set(t,i,s),this.constant=e,this}setFromNormalAndCoplanarPoint(t,i){return this.normal.copy(t),this.constant=-i.dot(this.normal),this}setFromCoplanarPoints(t,i,s){const e=es.subVectors(s,i).cross(Ae.subVectors(t,i)).normalize();return this.setFromNormalAndCoplanarPoint(e,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,i){return i.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,i){const s=t.delta(es),e=this.normal.dot(s);if(e===0)return this.distanceToPoint(t.start)===0?i.copy(t.start):null;const n=-(t.start.dot(this.normal)+this.constant)/e;return n<0||n>1?null:i.copy(t.start).addScaledVector(s,n)}intersectsLine(t){const i=this.distanceToPoint(t.start),s=this.distanceToPoint(t.end);return i<0&&s>0||s<0&&i>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,i){const s=i||ze.getNormalMatrix(t),e=this.coplanarPoint(es).applyMatrix4(t),n=this.normal.applyMatrix3(s).normalize();return this.constant=-e.dot(n),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ds=new A,_i=new A;class pt{constructor(t=new A,i=new A){this.start=t,this.end=i}set(t,i){return this.start.copy(t),this.end.copy(i),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,i){return this.delta(i).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,i){Ds.subVectors(t,this.start),_i.subVectors(this.end,this.start);const s=_i.dot(_i);let n=_i.dot(Ds)/s;return i&&(n=at(n,0,1)),n}closestPointToPoint(t,i,s){const e=this.closestPointToPointParameter(t,i);return this.delta(s).multiplyScalar(e).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Bs}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Bs);const vs=0,Se=1,Be=2,Ws=2,ns=1.25,Xs=1,ni=6*4+4+4,Mi=65535,Te=Math.pow(2,-24),rs=Symbol("SKIP_GENERATION");function Pe(u){return u.index?u.index.count:u.attributes.position.count}function Dt(u){return Pe(u)/3}function Ce(u,t=ArrayBuffer){return u>65535?new Uint32Array(new t(4*u)):new Uint16Array(new t(2*u))}function Ee(u,t){if(!u.index){const i=u.attributes.position.count,s=t.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer,e=Ce(i,s);u.setIndex(new ct(e,1));for(let n=0;n<i;n++)e[n]=n}}function Os(u,t){const i=Dt(u),s=t||u.drawRange,e=s.start/3,n=(s.start+s.count)/3,r=Math.max(0,e),a=Math.min(i,n)-r;return[{offset:Math.floor(r),count:Math.floor(a)}]}function Ys(u,t){if(!u.groups||!u.groups.length)return Os(u,t);const i=[],s=new Set,e=t||u.drawRange,n=e.start/3,r=(e.start+e.count)/3;for(const o of u.groups){const h=o.start/3,c=(o.start+o.count)/3;s.add(Math.max(n,h)),s.add(Math.min(r,c))}const a=Array.from(s.values()).sort((o,h)=>o-h);for(let o=0;o<a.length-1;o++){const h=a[o],c=a[o+1];i.push({offset:Math.floor(h),count:Math.floor(c-h)})}return i}function Fe(u,t){const i=Dt(u),s=Ys(u,t).sort((r,a)=>r.offset-a.offset),e=s[s.length-1];e.count=Math.min(i-e.offset,e.count);let n=0;return s.forEach(({count:r})=>n+=r),i!==n}function os(u,t,i,s,e){let n=1/0,r=1/0,a=1/0,o=-1/0,h=-1/0,c=-1/0,f=1/0,l=1/0,d=1/0,m=-1/0,y=-1/0,x=-1/0;for(let p=t*6,g=(t+i)*6;p<g;p+=6){const w=u[p+0],M=u[p+1],b=w-M,z=w+M;b<n&&(n=b),z>o&&(o=z),w<f&&(f=w),w>m&&(m=w);const _=u[p+2],S=u[p+3],B=_-S,T=_+S;B<r&&(r=B),T>h&&(h=T),_<l&&(l=_),_>y&&(y=_);const C=u[p+4],P=u[p+5],E=C-P,F=C+P;E<a&&(a=E),F>c&&(c=F),C<d&&(d=C),C>x&&(x=C)}s[0]=n,s[1]=r,s[2]=a,s[3]=o,s[4]=h,s[5]=c,e[0]=f,e[1]=l,e[2]=d,e[3]=m,e[4]=y,e[5]=x}function Ue(u,t=null,i=null,s=null){const e=u.attributes.position,n=u.index?u.index.array:null,r=Dt(u),a=e.normalized;let o;t===null?(o=new Float32Array(r*6*4),i=0,s=r):(o=t,i=i||0,s=s||r);const h=e.array,c=e.offset||0;let f=3;e.isInterleavedBufferAttribute&&(f=e.data.stride);const l=["getX","getY","getZ"];for(let d=i;d<i+s;d++){const m=d*3,y=d*6;let x=m+0,p=m+1,g=m+2;n&&(x=n[x],p=n[p],g=n[g]),a||(x=x*f+c,p=p*f+c,g=g*f+c);for(let w=0;w<3;w++){let M,b,z;a?(M=e[l[w]](x),b=e[l[w]](p),z=e[l[w]](g)):(M=h[x+w],b=h[p+w],z=h[g+w]);let _=M;b<_&&(_=b),z<_&&(_=z);let S=M;b>S&&(S=b),z>S&&(S=z);const B=(S-_)/2,T=w*2;o[y+T+0]=_+B,o[y+T+1]=B+(Math.abs(_)+B)*Te}}return o}function L(u,t,i){return i.min.x=t[u],i.min.y=t[u+1],i.min.z=t[u+2],i.max.x=t[u+3],i.max.y=t[u+4],i.max.z=t[u+5],i}function Zs(u){let t=-1,i=-1/0;for(let s=0;s<3;s++){const e=u[s+3]-u[s];e>i&&(i=e,t=s)}return t}function $s(u,t){t.set(u)}function Hs(u,t,i){let s,e;for(let n=0;n<3;n++){const r=n+3;s=u[n],e=t[n],i[n]=s<e?s:e,s=u[r],e=t[r],i[r]=s>e?s:e}}function Ai(u,t,i){for(let s=0;s<3;s++){const e=t[u+2*s],n=t[u+2*s+1],r=e-n,a=e+n;r<i[s]&&(i[s]=r),a>i[s+3]&&(i[s+3]=a)}}function ri(u){const t=u[3]-u[0],i=u[4]-u[1],s=u[5]-u[2];return 2*(t*i+i*s+s*t)}const yt=32,Re=(u,t)=>u.candidate-t.candidate,Mt=new Array(yt).fill().map(()=>({count:0,bounds:new Float32Array(6),rightCacheBounds:new Float32Array(6),leftCacheBounds:new Float32Array(6),candidate:0})),zi=new Float32Array(6);function ke(u,t,i,s,e,n){let r=-1,a=0;if(n===vs)r=Zs(t),r!==-1&&(a=(t[r]+t[r+3])/2);else if(n===Se)r=Zs(u),r!==-1&&(a=Le(i,s,e,r));else if(n===Be){const o=ri(u);let h=ns*e;const c=s*6,f=(s+e)*6;for(let l=0;l<3;l++){const d=t[l],x=(t[l+3]-d)/yt;if(e<yt/4){const p=[...Mt];p.length=e;let g=0;for(let M=c;M<f;M+=6,g++){const b=p[g];b.candidate=i[M+2*l],b.count=0;const{bounds:z,leftCacheBounds:_,rightCacheBounds:S}=b;for(let B=0;B<3;B++)S[B]=1/0,S[B+3]=-1/0,_[B]=1/0,_[B+3]=-1/0,z[B]=1/0,z[B+3]=-1/0;Ai(M,i,z)}p.sort(Re);let w=e;for(let M=0;M<w;M++){const b=p[M];for(;M+1<w&&p[M+1].candidate===b.candidate;)p.splice(M+1,1),w--}for(let M=c;M<f;M+=6){const b=i[M+2*l];for(let z=0;z<w;z++){const _=p[z];b>=_.candidate?Ai(M,i,_.rightCacheBounds):(Ai(M,i,_.leftCacheBounds),_.count++)}}for(let M=0;M<w;M++){const b=p[M],z=b.count,_=e-b.count,S=b.leftCacheBounds,B=b.rightCacheBounds;let T=0;z!==0&&(T=ri(S)/o);let C=0;_!==0&&(C=ri(B)/o);const P=Xs+ns*(T*z+C*_);P<h&&(r=l,h=P,a=b.candidate)}}else{for(let w=0;w<yt;w++){const M=Mt[w];M.count=0,M.candidate=d+x+w*x;const b=M.bounds;for(let z=0;z<3;z++)b[z]=1/0,b[z+3]=-1/0}for(let w=c;w<f;w+=6){let z=~~((i[w+2*l]-d)/x);z>=yt&&(z=yt-1);const _=Mt[z];_.count++,Ai(w,i,_.bounds)}const p=Mt[yt-1];$s(p.bounds,p.rightCacheBounds);for(let w=yt-2;w>=0;w--){const M=Mt[w],b=Mt[w+1];Hs(M.bounds,b.rightCacheBounds,M.rightCacheBounds)}let g=0;for(let w=0;w<yt-1;w++){const M=Mt[w],b=M.count,z=M.bounds,S=Mt[w+1].rightCacheBounds;b!==0&&(g===0?$s(z,zi):Hs(z,zi,zi)),g+=b;let B=0,T=0;g!==0&&(B=ri(zi)/o);const C=e-g;C!==0&&(T=ri(S)/o);const P=Xs+ns*(B*g+T*C);P<h&&(r=l,h=P,a=M.candidate)}}}}else console.warn(`MeshBVH: Invalid build strategy value ${n} used.`);return{axis:r,pos:a}}function Le(u,t,i,s){let e=0;for(let n=t,r=t+i;n<r;n++)e+=u[n*6+s*2];return e/i}class as{constructor(){this.boundingData=new Float32Array(6)}}function Ie(u,t,i,s,e,n){let r=s,a=s+e-1;const o=n.pos,h=n.axis*2;for(;;){for(;r<=a&&i[r*6+h]<o;)r++;for(;r<=a&&i[a*6+h]>=o;)a--;if(r<a){for(let c=0;c<3;c++){let f=t[r*3+c];t[r*3+c]=t[a*3+c],t[a*3+c]=f}for(let c=0;c<6;c++){let f=i[r*6+c];i[r*6+c]=i[a*6+c],i[a*6+c]=f}r++,a--}else return r}}function Ve(u,t,i,s,e,n){let r=s,a=s+e-1;const o=n.pos,h=n.axis*2;for(;;){for(;r<=a&&i[r*6+h]<o;)r++;for(;r<=a&&i[a*6+h]>=o;)a--;if(r<a){let c=u[r];u[r]=u[a],u[a]=c;for(let f=0;f<6;f++){let l=i[r*6+f];i[r*6+f]=i[a*6+f],i[a*6+f]=l}r++,a--}else return r}}function Y(u,t){return t[u+15]===65535}function H(u,t){return t[u+6]}function J(u,t){return t[u+14]}function Q(u){return u+8}function K(u,t){return t[u+6]}function js(u,t){return t[u+7]}function Xn(u){return u}let Gs,oi,Si,Js;const Ne=Math.pow(2,32);function cs(u){return"count"in u?1:1+cs(u.left)+cs(u.right)}function qe(u,t,i){return Gs=new Float32Array(i),oi=new Uint32Array(i),Si=new Uint16Array(i),Js=new Uint8Array(i),hs(u,t)}function hs(u,t){const i=u/4,s=u/2,e="count"in t,n=t.boundingData;for(let r=0;r<6;r++)Gs[i+r]=n[r];if(e)if(t.buffer){const r=t.buffer;Js.set(new Uint8Array(r),u);for(let a=u,o=u+r.byteLength;a<o;a+=ni){const h=a/2;Y(h,Si)||(oi[a/4+6]+=i)}return u+r.byteLength}else{const r=t.offset,a=t.count;return oi[i+6]=r,Si[s+14]=a,Si[s+15]=Mi,u+ni}else{const r=t.left,a=t.right,o=t.splitAxis;let h;if(h=hs(u+ni,r),h/4>Ne)throw new Error("MeshBVH: Cannot store child pointer greater than 32 bits.");return oi[i+6]=h/4,h=hs(h,a),oi[i+7]=o,h}}function De(u,t){const i=(u.index?u.index.count:u.attributes.position.count)/3,s=i>2**16,e=s?4:2,n=t?new SharedArrayBuffer(i*e):new ArrayBuffer(i*e),r=s?new Uint32Array(n):new Uint16Array(n);for(let a=0,o=r.length;a<o;a++)r[a]=a;return r}function ve(u,t,i,s,e){const{maxDepth:n,verbose:r,maxLeafTris:a,strategy:o,onProgress:h,indirect:c}=e,f=u._indirectBuffer,l=u.geometry,d=l.index?l.index.array:null,m=c?Ve:Ie,y=Dt(l),x=new Float32Array(6);let p=!1;const g=new as;return os(t,i,s,g.boundingData,x),M(g,i,s,x),g;function w(b){h&&h(b/y)}function M(b,z,_,S=null,B=0){if(!p&&B>=n&&(p=!0,r&&(console.warn(`MeshBVH: Max depth of ${n} reached when generating BVH. Consider increasing maxDepth.`),console.warn(l))),_<=a||B>=n)return w(z+_),b.offset=z,b.count=_,b;const T=ke(b.boundingData,S,t,z,_,o);if(T.axis===-1)return w(z+_),b.offset=z,b.count=_,b;const C=m(f,d,t,z,_,T);if(C===z||C===z+_)w(z+_),b.offset=z,b.count=_;else{b.splitAxis=T.axis;const P=new as,E=z,F=C-z;b.left=P,os(t,E,F,P.boundingData,x),M(P,E,F,x,B+1);const U=new as,R=C,j=_-F;b.right=U,os(t,R,j,U.boundingData,x),M(U,R,j,x,B+1)}return b}}function We(u,t){const i=u.geometry;t.indirect&&(u._indirectBuffer=De(i,t.useSharedArrayBuffer),Fe(i,t.range)&&!t.verbose&&console.warn('MeshBVH: Provided geometry contains groups or a range that do not fully span the vertex contents while using the "indirect" option. BVH may incorrectly report intersections on unrendered portions of the geometry.')),u._indirectBuffer||Ee(i,t);const s=t.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer,e=Ue(i),n=t.indirect?Os(i,t.range):Ys(i,t.range);u._roots=n.map(r=>{const a=ve(u,e,r.offset,r.count,t),o=cs(a),h=new s(ni*o);return qe(0,a,h),h})}class xt{constructor(){this.min=1/0,this.max=-1/0}setFromPointsField(t,i){let s=1/0,e=-1/0;for(let n=0,r=t.length;n<r;n++){const o=t[n][i];s=o<s?o:s,e=o>e?o:e}this.min=s,this.max=e}setFromPoints(t,i){let s=1/0,e=-1/0;for(let n=0,r=i.length;n<r;n++){const a=i[n],o=t.dot(a);s=o<s?o:s,e=o>e?o:e}this.min=s,this.max=e}isSeparated(t){return this.min>t.max||t.min>this.max}}xt.prototype.setFromBox=function(){const u=new A;return function(i,s){const e=s.min,n=s.max;let r=1/0,a=-1/0;for(let o=0;o<=1;o++)for(let h=0;h<=1;h++)for(let c=0;c<=1;c++){u.x=e.x*o+n.x*(1-o),u.y=e.y*h+n.y*(1-h),u.z=e.z*c+n.z*(1-c);const f=i.dot(u);r=Math.min(f,r),a=Math.max(f,a)}this.min=r,this.max=a}}();const Xe=function(){const u=new A,t=new A,i=new A;return function(e,n,r){const a=e.start,o=u,h=n.start,c=t;i.subVectors(a,h),u.subVectors(e.end,e.start),t.subVectors(n.end,n.start);const f=i.dot(c),l=c.dot(o),d=c.dot(c),m=i.dot(o),x=o.dot(o)*d-l*l;let p,g;x!==0?p=(f*l-m*d)/x:p=0,g=(f+p*l)/d,r.x=p,r.y=g}}(),ls=function(){const u=new v,t=new A,i=new A;return function(e,n,r,a){Xe(e,n,u);let o=u.x,h=u.y;if(o>=0&&o<=1&&h>=0&&h<=1){e.at(o,r),n.at(h,a);return}else if(o>=0&&o<=1){h<0?n.at(0,a):n.at(1,a),e.closestPointToPoint(a,!0,r);return}else if(h>=0&&h<=1){o<0?e.at(0,r):e.at(1,r),n.closestPointToPoint(r,!0,a);return}else{let c;o<0?c=e.start:c=e.end;let f;h<0?f=n.start:f=n.end;const l=t,d=i;if(e.closestPointToPoint(f,!0,t),n.closestPointToPoint(c,!0,i),l.distanceToSquared(f)<=d.distanceToSquared(c)){r.copy(l),a.copy(f);return}else{r.copy(c),a.copy(d);return}}}}(),Oe=function(){const u=new A,t=new A,i=new qs,s=new pt;return function(n,r){const{radius:a,center:o}=n,{a:h,b:c,c:f}=r;if(s.start=h,s.end=c,s.closestPointToPoint(o,!0,u).distanceTo(o)<=a||(s.start=h,s.end=f,s.closestPointToPoint(o,!0,u).distanceTo(o)<=a)||(s.start=c,s.end=f,s.closestPointToPoint(o,!0,u).distanceTo(o)<=a))return!0;const y=r.getPlane(i);if(Math.abs(y.distanceToPoint(o))<=a){const p=y.projectPoint(o,t);if(r.containsPoint(p))return!0}return!1}}(),Ye=1e-15;function us(u){return Math.abs(u)<Ye}class rt extends nt{constructor(...t){super(...t),this.isExtendedTriangle=!0,this.satAxes=new Array(4).fill().map(()=>new A),this.satBounds=new Array(4).fill().map(()=>new xt),this.points=[this.a,this.b,this.c],this.sphere=new Es,this.plane=new qs,this.needsUpdate=!0}intersectsSphere(t){return Oe(t,this)}update(){const t=this.a,i=this.b,s=this.c,e=this.points,n=this.satAxes,r=this.satBounds,a=n[0],o=r[0];this.getNormal(a),o.setFromPoints(a,e);const h=n[1],c=r[1];h.subVectors(t,i),c.setFromPoints(h,e);const f=n[2],l=r[2];f.subVectors(i,s),l.setFromPoints(f,e);const d=n[3],m=r[3];d.subVectors(s,t),m.setFromPoints(d,e),this.sphere.setFromPoints(this.points),this.plane.setFromNormalAndCoplanarPoint(a,t),this.needsUpdate=!1}}rt.prototype.closestPointToSegment=function(){const u=new A,t=new A,i=new pt;return function(e,n=null,r=null){const{start:a,end:o}=e,h=this.points;let c,f=1/0;for(let l=0;l<3;l++){const d=(l+1)%3;i.start.copy(h[l]),i.end.copy(h[d]),ls(i,e,u,t),c=u.distanceToSquared(t),c<f&&(f=c,n&&n.copy(u),r&&r.copy(t))}return this.closestPointToPoint(a,u),c=a.distanceToSquared(u),c<f&&(f=c,n&&n.copy(u),r&&r.copy(a)),this.closestPointToPoint(o,u),c=o.distanceToSquared(u),c<f&&(f=c,n&&n.copy(u),r&&r.copy(o)),Math.sqrt(f)}}(),rt.prototype.intersectsTriangle=function(){const u=new rt,t=new Array(3),i=new Array(3),s=new xt,e=new xt,n=new A,r=new A,a=new A,o=new A,h=new A,c=new pt,f=new pt,l=new pt,d=new A;function m(y,x,p){const g=y.points;let w=0,M=-1;for(let b=0;b<3;b++){const{start:z,end:_}=c;z.copy(g[b]),_.copy(g[(b+1)%3]),c.delta(r);const S=us(x.distanceToPoint(z));if(us(x.normal.dot(r))&&S){p.copy(c),w=2;break}const B=x.intersectLine(c,d);if(!B&&S&&d.copy(z),(B||S)&&!us(d.distanceTo(_))){if(w<=1)(w===1?p.start:p.end).copy(d),S&&(M=w);else if(w>=2){(M===1?p.start:p.end).copy(d),w=2;break}if(w++,w===2&&M===-1)break}}return w}return function(x,p=null,g=!1){this.needsUpdate&&this.update(),x.isExtendedTriangle?x.needsUpdate&&x.update():(u.copy(x),u.update(),x=u);const w=this.plane,M=x.plane;if(Math.abs(w.normal.dot(M.normal))>1-1e-10){const b=this.satBounds,z=this.satAxes;i[0]=x.a,i[1]=x.b,i[2]=x.c;for(let B=0;B<4;B++){const T=b[B],C=z[B];if(s.setFromPoints(C,i),T.isSeparated(s))return!1}const _=x.satBounds,S=x.satAxes;t[0]=this.a,t[1]=this.b,t[2]=this.c;for(let B=0;B<4;B++){const T=_[B],C=S[B];if(s.setFromPoints(C,t),T.isSeparated(s))return!1}for(let B=0;B<4;B++){const T=z[B];for(let C=0;C<4;C++){const P=S[C];if(n.crossVectors(T,P),s.setFromPoints(n,t),e.setFromPoints(n,i),s.isSeparated(e))return!1}}return p&&(g||console.warn("ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0."),p.start.set(0,0,0),p.end.set(0,0,0)),!0}else{const b=m(this,M,f);if(b===1&&x.containsPoint(f.end))return p&&(p.start.copy(f.end),p.end.copy(f.end)),!0;if(b!==2)return!1;const z=m(x,w,l);if(z===1&&this.containsPoint(l.end))return p&&(p.start.copy(l.end),p.end.copy(l.end)),!0;if(z!==2)return!1;if(f.delta(a),l.delta(o),a.dot(o)<0){let E=l.start;l.start=l.end,l.end=E}const _=f.start.dot(a),S=f.end.dot(a),B=l.start.dot(a),T=l.end.dot(a),C=S<B,P=_<T;return _!==T&&B!==S&&C===P?!1:(p&&(h.subVectors(f.start,l.start),h.dot(a)>0?p.start.copy(f.start):p.start.copy(l.start),h.subVectors(f.end,l.end),h.dot(a)<0?p.end.copy(f.end):p.end.copy(l.end)),!0)}}}(),rt.prototype.distanceToPoint=function(){const u=new A;return function(i){return this.closestPointToPoint(i,u),i.distanceTo(u)}}(),rt.prototype.distanceToTriangle=function(){const u=new A,t=new A,i=["a","b","c"],s=new pt,e=new pt;return function(r,a=null,o=null){const h=a||o?s:null;if(this.intersectsTriangle(r,h))return(a||o)&&(a&&h.getCenter(a),o&&h.getCenter(o)),0;let c=1/0;for(let f=0;f<3;f++){let l;const d=i[f],m=r[d];this.closestPointToPoint(m,u),l=m.distanceToSquared(u),l<c&&(c=l,a&&a.copy(u),o&&o.copy(m));const y=this[d];r.closestPointToPoint(y,u),l=y.distanceToSquared(u),l<c&&(c=l,a&&a.copy(y),o&&o.copy(u))}for(let f=0;f<3;f++){const l=i[f],d=i[(f+1)%3];s.set(this[l],this[d]);for(let m=0;m<3;m++){const y=i[m],x=i[(m+1)%3];e.set(r[y],r[x]),ls(s,e,u,t);const p=u.distanceToSquared(t);p<c&&(c=p,a&&a.copy(u),o&&o.copy(t))}}return Math.sqrt(c)}}();class X{constructor(t,i,s){this.isOrientedBox=!0,this.min=new A,this.max=new A,this.matrix=new q,this.invMatrix=new q,this.points=new Array(8).fill().map(()=>new A),this.satAxes=new Array(3).fill().map(()=>new A),this.satBounds=new Array(3).fill().map(()=>new xt),this.alignedSatBounds=new Array(3).fill().map(()=>new xt),this.needsUpdate=!1,t&&this.min.copy(t),i&&this.max.copy(i),s&&this.matrix.copy(s)}set(t,i,s){this.min.copy(t),this.max.copy(i),this.matrix.copy(s),this.needsUpdate=!0}copy(t){this.min.copy(t.min),this.max.copy(t.max),this.matrix.copy(t.matrix),this.needsUpdate=!0}}X.prototype.update=function(){return function(){const t=this.matrix,i=this.min,s=this.max,e=this.points;for(let h=0;h<=1;h++)for(let c=0;c<=1;c++)for(let f=0;f<=1;f++){const l=1*h|2*c|4*f,d=e[l];d.x=h?s.x:i.x,d.y=c?s.y:i.y,d.z=f?s.z:i.z,d.applyMatrix4(t)}const n=this.satBounds,r=this.satAxes,a=e[0];for(let h=0;h<3;h++){const c=r[h],f=n[h],l=1<<h,d=e[l];c.subVectors(a,d),f.setFromPoints(c,e)}const o=this.alignedSatBounds;o[0].setFromPointsField(e,"x"),o[1].setFromPointsField(e,"y"),o[2].setFromPointsField(e,"z"),this.invMatrix.copy(this.matrix).invert(),this.needsUpdate=!1}}(),X.prototype.intersectsBox=function(){const u=new xt;return function(i){this.needsUpdate&&this.update();const s=i.min,e=i.max,n=this.satBounds,r=this.satAxes,a=this.alignedSatBounds;if(u.min=s.x,u.max=e.x,a[0].isSeparated(u)||(u.min=s.y,u.max=e.y,a[1].isSeparated(u))||(u.min=s.z,u.max=e.z,a[2].isSeparated(u)))return!1;for(let o=0;o<3;o++){const h=r[o],c=n[o];if(u.setFromBox(h,i),c.isSeparated(u))return!1}return!0}}(),X.prototype.intersectsTriangle=function(){const u=new rt,t=new Array(3),i=new xt,s=new xt,e=new A;return function(r){this.needsUpdate&&this.update(),r.isExtendedTriangle?r.needsUpdate&&r.update():(u.copy(r),u.update(),r=u);const a=this.satBounds,o=this.satAxes;t[0]=r.a,t[1]=r.b,t[2]=r.c;for(let l=0;l<3;l++){const d=a[l],m=o[l];if(i.setFromPoints(m,t),d.isSeparated(i))return!1}const h=r.satBounds,c=r.satAxes,f=this.points;for(let l=0;l<3;l++){const d=h[l],m=c[l];if(i.setFromPoints(m,f),d.isSeparated(i))return!1}for(let l=0;l<3;l++){const d=o[l];for(let m=0;m<4;m++){const y=c[m];if(e.crossVectors(d,y),i.setFromPoints(e,t),s.setFromPoints(e,f),i.isSeparated(s))return!1}}return!0}}(),X.prototype.closestPointToPoint=function(){return function(t,i){return this.needsUpdate&&this.update(),i.copy(t).applyMatrix4(this.invMatrix).clamp(this.min,this.max).applyMatrix4(this.matrix),i}}(),X.prototype.distanceToPoint=function(){const u=new A;return function(i){return this.closestPointToPoint(i,u),i.distanceTo(u)}}(),X.prototype.distanceToBox=function(){const u=["x","y","z"],t=new Array(12).fill().map(()=>new pt),i=new Array(12).fill().map(()=>new pt),s=new A,e=new A;return function(r,a=0,o=null,h=null){if(this.needsUpdate&&this.update(),this.intersectsBox(r))return(o||h)&&(r.getCenter(e),this.closestPointToPoint(e,s),r.closestPointToPoint(s,e),o&&o.copy(s),h&&h.copy(e)),0;const c=a*a,f=r.min,l=r.max,d=this.points;let m=1/0;for(let x=0;x<8;x++){const p=d[x];e.copy(p).clamp(f,l);const g=p.distanceToSquared(e);if(g<m&&(m=g,o&&o.copy(p),h&&h.copy(e),g<c))return Math.sqrt(g)}let y=0;for(let x=0;x<3;x++)for(let p=0;p<=1;p++)for(let g=0;g<=1;g++){const w=(x+1)%3,M=(x+2)%3,b=p<<w|g<<M,z=1<<x|p<<w|g<<M,_=d[b],S=d[z];t[y].set(_,S);const T=u[x],C=u[w],P=u[M],E=i[y],F=E.start,U=E.end;F[T]=f[T],F[C]=p?f[C]:l[C],F[P]=g?f[P]:l[C],U[T]=l[T],U[C]=p?f[C]:l[C],U[P]=g?f[P]:l[C],y++}for(let x=0;x<=1;x++)for(let p=0;p<=1;p++)for(let g=0;g<=1;g++){e.x=x?l.x:f.x,e.y=p?l.y:f.y,e.z=g?l.z:f.z,this.closestPointToPoint(e,s);const w=e.distanceToSquared(s);if(w<m&&(m=w,o&&o.copy(s),h&&h.copy(e),w<c))return Math.sqrt(w)}for(let x=0;x<12;x++){const p=t[x];for(let g=0;g<12;g++){const w=i[g];ls(p,w,s,e);const M=s.distanceToSquared(e);if(M<m&&(m=M,o&&o.copy(s),h&&h.copy(e),M<c))return Math.sqrt(M)}}return Math.sqrt(m)}}();class fs{constructor(t){this._getNewPrimitive=t,this._primitives=[]}getPrimitive(){const t=this._primitives;return t.length===0?this._getNewPrimitive():t.pop()}releasePrimitive(t){this._primitives.push(t)}}class Ze extends fs{constructor(){super(()=>new rt)}}const tt=new Ze;class $e{constructor(){this.float32Array=null,this.uint16Array=null,this.uint32Array=null;const t=[];let i=null;this.setBuffer=s=>{i&&t.push(i),i=s,this.float32Array=new Float32Array(s),this.uint16Array=new Uint16Array(s),this.uint32Array=new Uint32Array(s)},this.clearBuffer=()=>{i=null,this.float32Array=null,this.uint16Array=null,this.uint32Array=null,t.length!==0&&this.setBuffer(t.pop())}}}const k=new $e;let At,vt;const Wt=[],Bi=new fs(()=>new W);function He(u,t,i,s,e,n){At=Bi.getPrimitive(),vt=Bi.getPrimitive(),Wt.push(At,vt),k.setBuffer(u._roots[t]);const r=ds(0,u.geometry,i,s,e,n);k.clearBuffer(),Bi.releasePrimitive(At),Bi.releasePrimitive(vt),Wt.pop(),Wt.pop();const a=Wt.length;return a>0&&(vt=Wt[a-1],At=Wt[a-2]),r}function ds(u,t,i,s,e=null,n=0,r=0){const{float32Array:a,uint16Array:o,uint32Array:h}=k;let c=u*2;if(Y(c,o)){const l=H(u,h),d=J(c,o);return L(u,a,At),s(l,d,!1,r,n+u,At)}else{let T=function(P){const{uint16Array:E,uint32Array:F}=k;let U=P*2;for(;!Y(U,E);)P=Q(P),U=P*2;return H(P,F)},C=function(P){const{uint16Array:E,uint32Array:F}=k;let U=P*2;for(;!Y(U,E);)P=K(P,F),U=P*2;return H(P,F)+J(U,E)};const l=Q(u),d=K(u,h);let m=l,y=d,x,p,g,w;if(e&&(g=At,w=vt,L(m,a,g),L(y,a,w),x=e(g),p=e(w),p<x)){m=d,y=l;const P=x;x=p,p=P,g=w}g||(g=At,L(m,a,g));const M=Y(m*2,o),b=i(g,M,x,r+1,n+m);let z;if(b===Ws){const P=T(m),F=C(m)-P;z=s(P,F,!0,r+1,n+m,g)}else z=b&&ds(m,t,i,s,e,n,r+1);if(z)return!0;w=vt,L(y,a,w);const _=Y(y*2,o),S=i(w,_,p,r+1,n+y);let B;if(S===Ws){const P=T(y),F=C(y)-P;B=s(P,F,!0,r+1,n+y,w)}else B=S&&ds(y,t,i,s,e,n,r+1);return!!B}}const ai=new A,ms=new A;function je(u,t,i={},s=0,e=1/0){const n=s*s,r=e*e;let a=1/0,o=null;if(u.shapecast({boundsTraverseOrder:c=>(ai.copy(t).clamp(c.min,c.max),ai.distanceToSquared(t)),intersectsBounds:(c,f,l)=>l<a&&l<r,intersectsTriangle:(c,f)=>{c.closestPointToPoint(t,ai);const l=t.distanceToSquared(ai);return l<a&&(ms.copy(ai),a=l,o=f),l<n}}),a===1/0)return null;const h=Math.sqrt(a);return i.point?i.point.copy(ms):i.point=ms.clone(),i.distance=h,i.faceIndex=o,i}const Xt=new A,Ot=new A,Yt=new A,Ti=new v,Pi=new v,Ci=new v,Qs=new A,Ks=new A,te=new A,Ei=new A;function Ge(u,t,i,s,e,n,r,a){let o;if(n===1?o=u.intersectTriangle(s,i,t,!0,e):o=u.intersectTriangle(t,i,s,n!==2,e),o===null)return null;const h=u.origin.distanceTo(e);return h<r||h>a?null:{distance:h,point:e.clone()}}function Je(u,t,i,s,e,n,r,a,o,h,c){Xt.fromBufferAttribute(t,n),Ot.fromBufferAttribute(t,r),Yt.fromBufferAttribute(t,a);const f=Ge(u,Xt,Ot,Yt,Ei,o,h,c);if(f){s&&(Ti.fromBufferAttribute(s,n),Pi.fromBufferAttribute(s,r),Ci.fromBufferAttribute(s,a),f.uv=nt.getInterpolation(Ei,Xt,Ot,Yt,Ti,Pi,Ci,new v)),e&&(Ti.fromBufferAttribute(e,n),Pi.fromBufferAttribute(e,r),Ci.fromBufferAttribute(e,a),f.uv1=nt.getInterpolation(Ei,Xt,Ot,Yt,Ti,Pi,Ci,new v)),i&&(Qs.fromBufferAttribute(i,n),Ks.fromBufferAttribute(i,r),te.fromBufferAttribute(i,a),f.normal=nt.getInterpolation(Ei,Xt,Ot,Yt,Qs,Ks,te,new A),f.normal.dot(u.direction)>0&&f.normal.multiplyScalar(-1));const l={a:n,b:r,c:a,normal:new A,materialIndex:0};nt.getNormal(Xt,Ot,Yt,l.normal),f.face=l,f.faceIndex=n}return f}function Fi(u,t,i,s,e,n,r){const a=s*3;let o=a+0,h=a+1,c=a+2;const f=u.index;u.index&&(o=f.getX(o),h=f.getX(h),c=f.getX(c));const{position:l,normal:d,uv:m,uv1:y}=u.attributes,x=Je(i,l,d,m,y,o,h,c,t,n,r);return x?(x.faceIndex=s,e&&e.push(x),x):null}function V(u,t,i,s){const e=u.a,n=u.b,r=u.c;let a=t,o=t+1,h=t+2;i&&(a=i.getX(a),o=i.getX(o),h=i.getX(h)),e.x=s.getX(a),e.y=s.getY(a),e.z=s.getZ(a),n.x=s.getX(o),n.y=s.getY(o),n.z=s.getZ(o),r.x=s.getX(h),r.y=s.getY(h),r.z=s.getZ(h)}function Qe(u,t,i,s,e,n,r,a){const{geometry:o,_indirectBuffer:h}=u;for(let c=s,f=s+e;c<f;c++)Fi(o,t,i,c,n,r,a)}function Ke(u,t,i,s,e,n,r){const{geometry:a,_indirectBuffer:o}=u;let h=1/0,c=null;for(let f=s,l=s+e;f<l;f++){let d;d=Fi(a,t,i,f,null,n,r),d&&d.distance<h&&(c=d,h=d.distance)}return c}function tn(u,t,i,s,e,n,r){const{geometry:a}=i,{index:o}=a,h=a.attributes.position;for(let c=u,f=t+u;c<f;c++){let l;if(l=c,V(r,l*3,o,h),r.needsUpdate=!0,s(r,l,e,n))return!0}return!1}function sn(u,t=null){t&&Array.isArray(t)&&(t=new Set(t));const i=u.geometry,s=i.index?i.index.array:null,e=i.attributes.position;let n,r,a,o,h=0;const c=u._roots;for(let l=0,d=c.length;l<d;l++)n=c[l],r=new Uint32Array(n),a=new Uint16Array(n),o=new Float32Array(n),f(0,h),h+=n.byteLength;function f(l,d,m=!1){const y=l*2;if(a[y+15]===Mi){const p=r[l+6],g=a[y+14];let w=1/0,M=1/0,b=1/0,z=-1/0,_=-1/0,S=-1/0;for(let B=3*p,T=3*(p+g);B<T;B++){let C=s[B];const P=e.getX(C),E=e.getY(C),F=e.getZ(C);P<w&&(w=P),P>z&&(z=P),E<M&&(M=E),E>_&&(_=E),F<b&&(b=F),F>S&&(S=F)}return o[l+0]!==w||o[l+1]!==M||o[l+2]!==b||o[l+3]!==z||o[l+4]!==_||o[l+5]!==S?(o[l+0]=w,o[l+1]=M,o[l+2]=b,o[l+3]=z,o[l+4]=_,o[l+5]=S,!0):!1}else{const p=l+8,g=r[l+6],w=p+d,M=g+d;let b=m,z=!1,_=!1;t?b||(z=t.has(w),_=t.has(M),b=!z&&!_):(z=!0,_=!0);const S=b||z,B=b||_;let T=!1;S&&(T=f(p,d,b));let C=!1;B&&(C=f(g,d,b));const P=T||C;if(P)for(let E=0;E<3;E++){const F=p+E,U=g+E,R=o[F],j=o[F+3],ht=o[U],lt=o[U+3];o[l+E]=R<ht?R:ht,o[l+E+3]=j>lt?j:lt}return P}}}function zt(u,t,i,s,e){let n,r,a,o,h,c;const f=1/i.direction.x,l=1/i.direction.y,d=1/i.direction.z,m=i.origin.x,y=i.origin.y,x=i.origin.z;let p=t[u],g=t[u+3],w=t[u+1],M=t[u+3+1],b=t[u+2],z=t[u+3+2];return f>=0?(n=(p-m)*f,r=(g-m)*f):(n=(g-m)*f,r=(p-m)*f),l>=0?(a=(w-y)*l,o=(M-y)*l):(a=(M-y)*l,o=(w-y)*l),n>o||a>r||((a>n||isNaN(n))&&(n=a),(o<r||isNaN(r))&&(r=o),d>=0?(h=(b-x)*d,c=(z-x)*d):(h=(z-x)*d,c=(b-x)*d),n>c||h>r)?!1:((h>n||n!==n)&&(n=h),(c<r||r!==r)&&(r=c),n<=e&&r>=s)}function en(u,t,i,s,e,n,r,a){const{geometry:o,_indirectBuffer:h}=u;for(let c=s,f=s+e;c<f;c++){let l=h?h[c]:c;Fi(o,t,i,l,n,r,a)}}function nn(u,t,i,s,e,n,r){const{geometry:a,_indirectBuffer:o}=u;let h=1/0,c=null;for(let f=s,l=s+e;f<l;f++){let d;d=Fi(a,t,i,o?o[f]:f,null,n,r),d&&d.distance<h&&(c=d,h=d.distance)}return c}function rn(u,t,i,s,e,n,r){const{geometry:a}=i,{index:o}=a,h=a.attributes.position;for(let c=u,f=t+u;c<f;c++){let l;if(l=i.resolveTriangleIndex(c),V(r,l*3,o,h),r.needsUpdate=!0,s(r,l,e,n))return!0}return!1}function on(u,t,i,s,e,n,r){k.setBuffer(u._roots[t]),ps(0,u,i,s,e,n,r),k.clearBuffer()}function ps(u,t,i,s,e,n,r){const{float32Array:a,uint16Array:o,uint32Array:h}=k,c=u*2;if(Y(c,o)){const l=H(u,h),d=J(c,o);Qe(t,i,s,l,d,e,n,r)}else{const l=Q(u);zt(l,a,s,n,r)&&ps(l,t,i,s,e,n,r);const d=K(u,h);zt(d,a,s,n,r)&&ps(d,t,i,s,e,n,r)}}const an=["x","y","z"];function cn(u,t,i,s,e,n){k.setBuffer(u._roots[t]);const r=ys(0,u,i,s,e,n);return k.clearBuffer(),r}function ys(u,t,i,s,e,n){const{float32Array:r,uint16Array:a,uint32Array:o}=k;let h=u*2;if(Y(h,a)){const f=H(u,o),l=J(h,a);return Ke(t,i,s,f,l,e,n)}else{const f=js(u,o),l=an[f],m=s.direction[l]>=0;let y,x;m?(y=Q(u),x=K(u,o)):(y=K(u,o),x=Q(u));const g=zt(y,r,s,e,n)?ys(y,t,i,s,e,n):null;if(g){const b=g.point[l];if(m?b<=r[x+f]:b>=r[x+f+3])return g}const M=zt(x,r,s,e,n)?ys(x,t,i,s,e,n):null;return g&&M?g.distance<=M.distance?g:M:g||M||null}}const Ui=new W,Zt=new rt,$t=new rt,ci=new q,ie=new X,Ri=new X;function hn(u,t,i,s){k.setBuffer(u._roots[t]);const e=xs(0,u,i,s);return k.clearBuffer(),e}function xs(u,t,i,s,e=null){const{float32Array:n,uint16Array:r,uint32Array:a}=k;let o=u*2;if(e===null&&(i.boundingBox||i.computeBoundingBox(),ie.set(i.boundingBox.min,i.boundingBox.max,s),e=ie),Y(o,r)){const c=t.geometry,f=c.index,l=c.attributes.position,d=i.index,m=i.attributes.position,y=H(u,a),x=J(o,r);if(ci.copy(s).invert(),i.boundsTree)return L(u,n,Ri),Ri.matrix.copy(ci),Ri.needsUpdate=!0,i.boundsTree.shapecast({intersectsBounds:g=>Ri.intersectsBox(g),intersectsTriangle:g=>{g.a.applyMatrix4(s),g.b.applyMatrix4(s),g.c.applyMatrix4(s),g.needsUpdate=!0;for(let w=y*3,M=(x+y)*3;w<M;w+=3)if(V($t,w,f,l),$t.needsUpdate=!0,g.intersectsTriangle($t))return!0;return!1}});for(let p=y*3,g=(x+y)*3;p<g;p+=3){V(Zt,p,f,l),Zt.a.applyMatrix4(ci),Zt.b.applyMatrix4(ci),Zt.c.applyMatrix4(ci),Zt.needsUpdate=!0;for(let w=0,M=d.count;w<M;w+=3)if(V($t,w,d,m),$t.needsUpdate=!0,Zt.intersectsTriangle($t))return!0}}else{const c=u+8,f=a[u+6];return L(c,n,Ui),!!(e.intersectsBox(Ui)&&xs(c,t,i,s,e)||(L(f,n,Ui),e.intersectsBox(Ui)&&xs(f,t,i,s,e)))}}const ki=new q,gs=new X,hi=new X,ln=new A,un=new A,fn=new A,dn=new A;function mn(u,t,i,s={},e={},n=0,r=1/0){t.boundingBox||t.computeBoundingBox(),gs.set(t.boundingBox.min,t.boundingBox.max,i),gs.needsUpdate=!0;const a=u.geometry,o=a.attributes.position,h=a.index,c=t.attributes.position,f=t.index,l=tt.getPrimitive(),d=tt.getPrimitive();let m=ln,y=un,x=null,p=null;e&&(x=fn,p=dn);let g=1/0,w=null,M=null;return ki.copy(i).invert(),hi.matrix.copy(ki),u.shapecast({boundsTraverseOrder:b=>gs.distanceToBox(b),intersectsBounds:(b,z,_)=>_<g&&_<r?(z&&(hi.min.copy(b.min),hi.max.copy(b.max),hi.needsUpdate=!0),!0):!1,intersectsRange:(b,z)=>{if(t.boundsTree)return t.boundsTree.shapecast({boundsTraverseOrder:S=>hi.distanceToBox(S),intersectsBounds:(S,B,T)=>T<g&&T<r,intersectsRange:(S,B)=>{for(let T=S,C=S+B;T<C;T++){V(d,3*T,f,c),d.a.applyMatrix4(i),d.b.applyMatrix4(i),d.c.applyMatrix4(i),d.needsUpdate=!0;for(let P=b,E=b+z;P<E;P++){V(l,3*P,h,o),l.needsUpdate=!0;const F=l.distanceToTriangle(d,m,x);if(F<g&&(y.copy(m),p&&p.copy(x),g=F,w=P,M=T),F<n)return!0}}}});{const _=Dt(t);for(let S=0,B=_;S<B;S++){V(d,3*S,f,c),d.a.applyMatrix4(i),d.b.applyMatrix4(i),d.c.applyMatrix4(i),d.needsUpdate=!0;for(let T=b,C=b+z;T<C;T++){V(l,3*T,h,o),l.needsUpdate=!0;const P=l.distanceToTriangle(d,m,x);if(P<g&&(y.copy(m),p&&p.copy(x),g=P,w=T,M=S),P<n)return!0}}}}}),tt.releasePrimitive(l),tt.releasePrimitive(d),g===1/0?null:(s.point?s.point.copy(y):s.point=y.clone(),s.distance=g,s.faceIndex=w,e&&(e.point?e.point.copy(p):e.point=p.clone(),e.point.applyMatrix4(ki),y.applyMatrix4(ki),e.distance=y.sub(e.point).length(),e.faceIndex=M),s)}function pn(u,t=null){t&&Array.isArray(t)&&(t=new Set(t));const i=u.geometry,s=i.index?i.index.array:null,e=i.attributes.position;let n,r,a,o,h=0;const c=u._roots;for(let l=0,d=c.length;l<d;l++)n=c[l],r=new Uint32Array(n),a=new Uint16Array(n),o=new Float32Array(n),f(0,h),h+=n.byteLength;function f(l,d,m=!1){const y=l*2;if(a[y+15]===Mi){const p=r[l+6],g=a[y+14];let w=1/0,M=1/0,b=1/0,z=-1/0,_=-1/0,S=-1/0;for(let B=p,T=p+g;B<T;B++){const C=3*u.resolveTriangleIndex(B);for(let P=0;P<3;P++){let E=C+P;E=s?s[E]:E;const F=e.getX(E),U=e.getY(E),R=e.getZ(E);F<w&&(w=F),F>z&&(z=F),U<M&&(M=U),U>_&&(_=U),R<b&&(b=R),R>S&&(S=R)}}return o[l+0]!==w||o[l+1]!==M||o[l+2]!==b||o[l+3]!==z||o[l+4]!==_||o[l+5]!==S?(o[l+0]=w,o[l+1]=M,o[l+2]=b,o[l+3]=z,o[l+4]=_,o[l+5]=S,!0):!1}else{const p=l+8,g=r[l+6],w=p+d,M=g+d;let b=m,z=!1,_=!1;t?b||(z=t.has(w),_=t.has(M),b=!z&&!_):(z=!0,_=!0);const S=b||z,B=b||_;let T=!1;S&&(T=f(p,d,b));let C=!1;B&&(C=f(g,d,b));const P=T||C;if(P)for(let E=0;E<3;E++){const F=p+E,U=g+E,R=o[F],j=o[F+3],ht=o[U],lt=o[U+3];o[l+E]=R<ht?R:ht,o[l+E+3]=j>lt?j:lt}return P}}}function yn(u,t,i,s,e,n,r){k.setBuffer(u._roots[t]),bs(0,u,i,s,e,n,r),k.clearBuffer()}function bs(u,t,i,s,e,n,r){const{float32Array:a,uint16Array:o,uint32Array:h}=k,c=u*2;if(Y(c,o)){const l=H(u,h),d=J(c,o);en(t,i,s,l,d,e,n,r)}else{const l=Q(u);zt(l,a,s,n,r)&&bs(l,t,i,s,e,n,r);const d=K(u,h);zt(d,a,s,n,r)&&bs(d,t,i,s,e,n,r)}}const xn=["x","y","z"];function gn(u,t,i,s,e,n){k.setBuffer(u._roots[t]);const r=ws(0,u,i,s,e,n);return k.clearBuffer(),r}function ws(u,t,i,s,e,n){const{float32Array:r,uint16Array:a,uint32Array:o}=k;let h=u*2;if(Y(h,a)){const f=H(u,o),l=J(h,a);return nn(t,i,s,f,l,e,n)}else{const f=js(u,o),l=xn[f],m=s.direction[l]>=0;let y,x;m?(y=Q(u),x=K(u,o)):(y=K(u,o),x=Q(u));const g=zt(y,r,s,e,n)?ws(y,t,i,s,e,n):null;if(g){const b=g.point[l];if(m?b<=r[x+f]:b>=r[x+f+3])return g}const M=zt(x,r,s,e,n)?ws(x,t,i,s,e,n):null;return g&&M?g.distance<=M.distance?g:M:g||M||null}}const Li=new W,Ht=new rt,jt=new rt,li=new q,se=new X,Ii=new X;function bn(u,t,i,s){k.setBuffer(u._roots[t]);const e=_s(0,u,i,s);return k.clearBuffer(),e}function _s(u,t,i,s,e=null){const{float32Array:n,uint16Array:r,uint32Array:a}=k;let o=u*2;if(e===null&&(i.boundingBox||i.computeBoundingBox(),se.set(i.boundingBox.min,i.boundingBox.max,s),e=se),Y(o,r)){const c=t.geometry,f=c.index,l=c.attributes.position,d=i.index,m=i.attributes.position,y=H(u,a),x=J(o,r);if(li.copy(s).invert(),i.boundsTree)return L(u,n,Ii),Ii.matrix.copy(li),Ii.needsUpdate=!0,i.boundsTree.shapecast({intersectsBounds:g=>Ii.intersectsBox(g),intersectsTriangle:g=>{g.a.applyMatrix4(s),g.b.applyMatrix4(s),g.c.applyMatrix4(s),g.needsUpdate=!0;for(let w=y,M=x+y;w<M;w++)if(V(jt,3*t.resolveTriangleIndex(w),f,l),jt.needsUpdate=!0,g.intersectsTriangle(jt))return!0;return!1}});for(let p=y,g=x+y;p<g;p++){const w=t.resolveTriangleIndex(p);V(Ht,3*w,f,l),Ht.a.applyMatrix4(li),Ht.b.applyMatrix4(li),Ht.c.applyMatrix4(li),Ht.needsUpdate=!0;for(let M=0,b=d.count;M<b;M+=3)if(V(jt,M,d,m),jt.needsUpdate=!0,Ht.intersectsTriangle(jt))return!0}}else{const c=u+8,f=a[u+6];return L(c,n,Li),!!(e.intersectsBox(Li)&&_s(c,t,i,s,e)||(L(f,n,Li),e.intersectsBox(Li)&&_s(f,t,i,s,e)))}}const Vi=new q,Ms=new X,ui=new X,wn=new A,_n=new A,Mn=new A,An=new A;function zn(u,t,i,s={},e={},n=0,r=1/0){t.boundingBox||t.computeBoundingBox(),Ms.set(t.boundingBox.min,t.boundingBox.max,i),Ms.needsUpdate=!0;const a=u.geometry,o=a.attributes.position,h=a.index,c=t.attributes.position,f=t.index,l=tt.getPrimitive(),d=tt.getPrimitive();let m=wn,y=_n,x=null,p=null;e&&(x=Mn,p=An);let g=1/0,w=null,M=null;return Vi.copy(i).invert(),ui.matrix.copy(Vi),u.shapecast({boundsTraverseOrder:b=>Ms.distanceToBox(b),intersectsBounds:(b,z,_)=>_<g&&_<r?(z&&(ui.min.copy(b.min),ui.max.copy(b.max),ui.needsUpdate=!0),!0):!1,intersectsRange:(b,z)=>{if(t.boundsTree){const _=t.boundsTree;return _.shapecast({boundsTraverseOrder:S=>ui.distanceToBox(S),intersectsBounds:(S,B,T)=>T<g&&T<r,intersectsRange:(S,B)=>{for(let T=S,C=S+B;T<C;T++){const P=_.resolveTriangleIndex(T);V(d,3*P,f,c),d.a.applyMatrix4(i),d.b.applyMatrix4(i),d.c.applyMatrix4(i),d.needsUpdate=!0;for(let E=b,F=b+z;E<F;E++){const U=u.resolveTriangleIndex(E);V(l,3*U,h,o),l.needsUpdate=!0;const R=l.distanceToTriangle(d,m,x);if(R<g&&(y.copy(m),p&&p.copy(x),g=R,w=E,M=T),R<n)return!0}}}})}else{const _=Dt(t);for(let S=0,B=_;S<B;S++){V(d,3*S,f,c),d.a.applyMatrix4(i),d.b.applyMatrix4(i),d.c.applyMatrix4(i),d.needsUpdate=!0;for(let T=b,C=b+z;T<C;T++){const P=u.resolveTriangleIndex(T);V(l,3*P,h,o),l.needsUpdate=!0;const E=l.distanceToTriangle(d,m,x);if(E<g&&(y.copy(m),p&&p.copy(x),g=E,w=T,M=S),E<n)return!0}}}}}),tt.releasePrimitive(l),tt.releasePrimitive(d),g===1/0?null:(s.point?s.point.copy(y):s.point=y.clone(),s.distance=g,s.faceIndex=w,e&&(e.point?e.point.copy(p):e.point=p.clone(),e.point.applyMatrix4(Vi),y.applyMatrix4(Vi),e.distance=y.sub(e.point).length(),e.faceIndex=M),s)}function Sn(){return typeof SharedArrayBuffer<"u"}const fi=new k.constructor,Ni=new k.constructor,St=new fs(()=>new W),Gt=new W,Jt=new W,As=new W,zs=new W;let Ss=!1;function Bn(u,t,i,s){if(Ss)throw new Error("MeshBVH: Recursive calls to bvhcast not supported.");Ss=!0;const e=u._roots,n=t._roots;let r,a=0,o=0;const h=new q().copy(i).invert();for(let c=0,f=e.length;c<f;c++){fi.setBuffer(e[c]),o=0;const l=St.getPrimitive();L(0,fi.float32Array,l),l.applyMatrix4(h);for(let d=0,m=n.length;d<m&&(Ni.setBuffer(n[d]),r=ot(0,0,i,h,s,a,o,0,0,l),Ni.clearBuffer(),o+=n[d].length,!r);d++);if(St.releasePrimitive(l),fi.clearBuffer(),a+=e[c].length,r)break}return Ss=!1,r}function ot(u,t,i,s,e,n=0,r=0,a=0,o=0,h=null,c=!1){let f,l;c?(f=Ni,l=fi):(f=fi,l=Ni);const d=f.float32Array,m=f.uint32Array,y=f.uint16Array,x=l.float32Array,p=l.uint32Array,g=l.uint16Array,w=u*2,M=t*2,b=Y(w,y),z=Y(M,g);let _=!1;if(z&&b)c?_=e(H(t,p),J(t*2,g),H(u,m),J(u*2,y),o,r+t,a,n+u):_=e(H(u,m),J(u*2,y),H(t,p),J(t*2,g),a,n+u,o,r+t);else if(z){const S=St.getPrimitive();L(t,x,S),S.applyMatrix4(i);const B=Q(u),T=K(u,m);L(B,d,Gt),L(T,d,Jt);const C=S.intersectsBox(Gt),P=S.intersectsBox(Jt);_=C&&ot(t,B,s,i,e,r,n,o,a+1,S,!c)||P&&ot(t,T,s,i,e,r,n,o,a+1,S,!c),St.releasePrimitive(S)}else{const S=Q(t),B=K(t,p);L(S,x,As),L(B,x,zs);const T=h.intersectsBox(As),C=h.intersectsBox(zs);if(T&&C)_=ot(u,S,i,s,e,n,r,a,o+1,h,c)||ot(u,B,i,s,e,n,r,a,o+1,h,c);else if(T)if(b)_=ot(u,S,i,s,e,n,r,a,o+1,h,c);else{const P=St.getPrimitive();P.copy(As).applyMatrix4(i);const E=Q(u),F=K(u,m);L(E,d,Gt),L(F,d,Jt);const U=P.intersectsBox(Gt),R=P.intersectsBox(Jt);_=U&&ot(S,E,s,i,e,r,n,o,a+1,P,!c)||R&&ot(S,F,s,i,e,r,n,o,a+1,P,!c),St.releasePrimitive(P)}else if(C)if(b)_=ot(u,B,i,s,e,n,r,a,o+1,h,c);else{const P=St.getPrimitive();P.copy(zs).applyMatrix4(i);const E=Q(u),F=K(u,m);L(E,d,Gt),L(F,d,Jt);const U=P.intersectsBox(Gt),R=P.intersectsBox(Jt);_=U&&ot(B,E,s,i,e,r,n,o,a+1,P,!c)||R&&ot(B,F,s,i,e,r,n,o,a+1,P,!c),St.releasePrimitive(P)}}return _}const qi=new X,ee=new W,Tn={strategy:vs,maxDepth:40,maxLeafTris:10,useSharedArrayBuffer:!1,setBoundingBox:!0,onProgress:null,indirect:!1,verbose:!0,range:null};class Di{static serialize(t,i={}){i={cloneBuffers:!0,...i};const s=t.geometry,e=t._roots,n=t._indirectBuffer,r=s.getIndex();let a;return i.cloneBuffers?a={roots:e.map(o=>o.slice()),index:r?r.array.slice():null,indirectBuffer:n?n.slice():null}:a={roots:e,index:r?r.array:null,indirectBuffer:n},a}static deserialize(t,i,s={}){s={setIndex:!0,indirect:!!t.indirectBuffer,...s};const{index:e,roots:n,indirectBuffer:r}=t,a=new Di(i,{...s,[rs]:!0});if(a._roots=n,a._indirectBuffer=r||null,s.setIndex){const o=i.getIndex();if(o===null){const h=new ct(t.index,1,!1);i.setIndex(h)}else o.array!==e&&(o.array.set(e),o.needsUpdate=!0)}return a}get indirect(){return!!this._indirectBuffer}constructor(t,i={}){if(t.isBufferGeometry){if(t.index&&t.index.isInterleavedBufferAttribute)throw new Error("MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.")}else throw new Error("MeshBVH: Only BufferGeometries are supported.");if(i=Object.assign({...Tn,[rs]:!1},i),i.useSharedArrayBuffer&&!Sn())throw new Error("MeshBVH: SharedArrayBuffer is not available.");this.geometry=t,this._roots=null,this._indirectBuffer=null,i[rs]||(We(this,i),!t.boundingBox&&i.setBoundingBox&&(t.boundingBox=this.getBoundingBox(new W))),this.resolveTriangleIndex=i.indirect?s=>this._indirectBuffer[s]:s=>s}refit(t=null){return(this.indirect?pn:sn)(this,t)}traverse(t,i=0){const s=this._roots[i],e=new Uint32Array(s),n=new Uint16Array(s);r(0);function r(a,o=0){const h=a*2,c=n[h+15]===Mi;if(c){const f=e[a+6],l=n[h+14];t(o,c,new Float32Array(s,a*4,6),f,l)}else{const f=a+ni/4,l=e[a+6],d=e[a+7];t(o,c,new Float32Array(s,a*4,6),d)||(r(f,o+1),r(l,o+1))}}}raycast(t,i=0,s=0,e=1/0){const n=this._roots,r=this.geometry,a=[],o=i.isMaterial,h=Array.isArray(i),c=r.groups,f=o?i.side:i,l=this.indirect?yn:on;for(let d=0,m=n.length;d<m;d++){const y=h?i[c[d].materialIndex].side:f,x=a.length;if(l(this,d,y,t,a,s,e),h){const p=c[d].materialIndex;for(let g=x,w=a.length;g<w;g++)a[g].face.materialIndex=p}}return a}raycastFirst(t,i=0,s=0,e=1/0){const n=this._roots,r=this.geometry,a=i.isMaterial,o=Array.isArray(i);let h=null;const c=r.groups,f=a?i.side:i,l=this.indirect?gn:cn;for(let d=0,m=n.length;d<m;d++){const y=o?i[c[d].materialIndex].side:f,x=l(this,d,y,t,s,e);x!=null&&(h==null||x.distance<h.distance)&&(h=x,o&&(x.face.materialIndex=c[d].materialIndex))}return h}intersectsGeometry(t,i){let s=!1;const e=this._roots,n=this.indirect?bn:hn;for(let r=0,a=e.length;r<a&&(s=n(this,r,t,i),!s);r++);return s}shapecast(t){const i=tt.getPrimitive(),s=this.indirect?rn:tn;let{boundsTraverseOrder:e,intersectsBounds:n,intersectsRange:r,intersectsTriangle:a}=t;if(r&&a){const f=r;r=(l,d,m,y,x)=>f(l,d,m,y,x)?!0:s(l,d,this,a,m,y,i)}else r||(a?r=(f,l,d,m)=>s(f,l,this,a,d,m,i):r=(f,l,d)=>d);let o=!1,h=0;const c=this._roots;for(let f=0,l=c.length;f<l;f++){const d=c[f];if(o=He(this,f,n,r,e,h),o)break;h+=d.byteLength}return tt.releasePrimitive(i),o}bvhcast(t,i,s){let{intersectsRanges:e,intersectsTriangles:n}=s;const r=tt.getPrimitive(),a=this.geometry.index,o=this.geometry.attributes.position,h=this.indirect?m=>{const y=this.resolveTriangleIndex(m);V(r,y*3,a,o)}:m=>{V(r,m*3,a,o)},c=tt.getPrimitive(),f=t.geometry.index,l=t.geometry.attributes.position,d=t.indirect?m=>{const y=t.resolveTriangleIndex(m);V(c,y*3,f,l)}:m=>{V(c,m*3,f,l)};if(n){const m=(y,x,p,g,w,M,b,z)=>{for(let _=p,S=p+g;_<S;_++){d(_),c.a.applyMatrix4(i),c.b.applyMatrix4(i),c.c.applyMatrix4(i),c.needsUpdate=!0;for(let B=y,T=y+x;B<T;B++)if(h(B),r.needsUpdate=!0,n(r,c,B,_,w,M,b,z))return!0}return!1};if(e){const y=e;e=function(x,p,g,w,M,b,z,_){return y(x,p,g,w,M,b,z,_)?!0:m(x,p,g,w,M,b,z,_)}}else e=m}return Bn(this,t,i,e)}intersectsBox(t,i){return qi.set(t.min,t.max,i),qi.needsUpdate=!0,this.shapecast({intersectsBounds:s=>qi.intersectsBox(s),intersectsTriangle:s=>qi.intersectsTriangle(s)})}intersectsSphere(t){return this.shapecast({intersectsBounds:i=>t.intersectsBox(i),intersectsTriangle:i=>i.intersectsSphere(t)})}closestPointToGeometry(t,i,s={},e={},n=0,r=1/0){return(this.indirect?zn:mn)(this,t,i,s,e,n,r)}closestPointToPoint(t,i={},s=0,e=1/0){return je(this,t,i,s,e)}getBoundingBox(t){return t.makeEmpty(),this._roots.forEach(s=>{L(0,new Float32Array(s),ee),t.union(ee)}),t}}onmessage=({data:u})=>{let t=performance.now();function i(r){r=Math.min(r,1);const a=performance.now();a-t>=10&&r!==1&&(postMessage({error:null,serialized:null,position:null,progress:r}),t=a)}const{index:s,position:e,options:n}=u;try{const r=new ss;if(r.setAttribute("position",new ct(e,3,!1)),s&&r.setIndex(new ct(s,1,!1)),n.includedProgressCallback&&(n.onProgress=i),n.groups){const c=n.groups;for(const f in c){const l=c[f];r.addGroup(l.start,l.count,l.materialIndex)}}const a=new Di(r,n),o=Di.serialize(a,{copyIndexBuffer:!1});let h=[e.buffer,...o.roots];o.index&&h.push(o.index.buffer),h=h.filter(c=>typeof SharedArrayBuffer>"u"||!(c instanceof SharedArrayBuffer)),a._indirectBuffer&&h.push(o.indirectBuffer.buffer),postMessage({error:null,serialized:o,position:e,progress:1},h)}catch(r){postMessage({error:r,serialized:null,position:null,progress:1})}}})();
